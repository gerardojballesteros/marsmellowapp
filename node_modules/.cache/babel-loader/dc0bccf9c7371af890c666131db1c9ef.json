{"ast":null,"code":"import { jsx, Fragment } from 'react/jsx-runtime';\nimport { useLayoutEffect, useEffect, useRef, useMemo, useState, useCallback } from 'react';\n\nconst ratio = _ref => {\n  let {\n    width,\n    height\n  } = _ref;\n  return width / height;\n};\n\nconst round = function (value) {\n  let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const factor = 10 ** decimals;\n  return Math.round((value + Number.EPSILON) * factor) / factor;\n};\n\nconst RankingFunctionComparator = rank => (a, b) => rank(b) - rank(a);\n\nconst MinHeap = comparator => {\n  const heap = [];\n  const compare = comparator;\n  let n = 0;\n\n  const greater = (i, j) => compare(heap[i], heap[j]) < 0;\n\n  const swap = (i, j) => {\n    const temp = heap[i];\n    heap[i] = heap[j];\n    heap[j] = temp;\n  };\n\n  const swim = k => {\n    let k2 = k >> 1;\n\n    while (k > 1 && greater(k2, k)) {\n      swap(k2, k);\n      k = k2;\n      k2 = k >> 1;\n    }\n  };\n\n  const sink = k => {\n    let j = k << 1;\n\n    while (j <= n) {\n      if (j < n && greater(j, j + 1)) j++;\n      if (!greater(k, j)) break;\n      swap(k, j);\n      k = j;\n      j = k << 1;\n    }\n  };\n\n  return {\n    push: element => {\n      n += 1;\n      heap[n] = element;\n      swim(n);\n    },\n    pop: () => {\n      if (n === 0) return undefined;\n      swap(1, n);\n      n -= 1;\n      const max = heap.pop();\n      sink(1);\n      return max;\n    },\n    size: () => n\n  };\n};\n\nconst buildPrecedentsMap = (graph, startNode, endNode) => {\n  const precedentsMap = {};\n  const visited = {};\n  const storedShortestPaths = {};\n  storedShortestPaths[startNode] = 0;\n  const pQueue = MinHeap(RankingFunctionComparator(el => el.weight));\n  pQueue.push({\n    id: startNode,\n    weight: 0\n  });\n  let shortestNode;\n\n  while ((shortestNode = pQueue.pop()) !== undefined) {\n    const shortestNodeId = shortestNode.id;\n    if (visited[shortestNodeId]) continue;\n    const neighboringNodes = graph(shortestNodeId);\n    visited[shortestNodeId] = 1;\n\n    for (const neighbor in neighboringNodes) {\n      const newTotalWeight = shortestNode.weight + neighboringNodes[neighbor];\n\n      if (storedShortestPaths[neighbor] === undefined || storedShortestPaths[neighbor] > newTotalWeight && (storedShortestPaths[neighbor] / newTotalWeight > 1.005 || precedentsMap[neighbor] < shortestNodeId)) {\n        storedShortestPaths[neighbor] = newTotalWeight;\n        pQueue.push({\n          id: neighbor,\n          weight: newTotalWeight\n        });\n        precedentsMap[neighbor] = shortestNodeId;\n      }\n    }\n  }\n\n  if (typeof storedShortestPaths[endNode] === \"undefined\") {\n    return undefined;\n  }\n\n  return precedentsMap;\n};\n\nconst getPathFromPrecedentsMap = (precedentsMap, endNode) => {\n  const nodes = [];\n  let n = endNode;\n\n  while (n) {\n    nodes.push(n);\n    n = precedentsMap[n];\n  }\n\n  return nodes.reverse();\n};\n\nconst findShortestPath = (graph, startNode, endNode) => {\n  const precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\n  return precedentsMap !== undefined ? getPathFromPrecedentsMap(precedentsMap, endNode) : undefined;\n};\n\nconst findIdealNodeSearch = _ref2 => {\n  let {\n    photos,\n    targetRowHeight,\n    containerWidth\n  } = _ref2;\n  const minRatio = photos.reduce((acc, photo) => Math.min(ratio(photo), acc), Number.MAX_VALUE);\n  return round(containerWidth / targetRowHeight / minRatio) + 2;\n};\n\nconst getCommonHeight = (row, containerWidth, spacing, padding) => {\n  const rowWidth = containerWidth - (row.length - 1) * spacing - 2 * padding * row.length;\n  const totalAspectRatio = row.reduce((acc, photo) => acc + ratio(photo), 0);\n  return rowWidth / totalAspectRatio;\n};\n\nconst cost = (photos, i, j, width, targetRowHeight, spacing, padding) => {\n  const row = photos.slice(i, j);\n  const commonHeight = getCommonHeight(row, width, spacing, padding);\n  return commonHeight > 0 ? (commonHeight - targetRowHeight) ** 2 * row.length : undefined;\n};\n\nconst makeGetNeighbors$1 = _ref3 => {\n  let {\n    photos,\n    layoutOptions,\n    targetRowHeight,\n    limitNodeSearch,\n    rowConstraints,\n    instrumentation\n  } = _ref3;\n  return node => {\n    var _a, _b;\n\n    const {\n      containerWidth,\n      spacing,\n      padding\n    } = layoutOptions;\n    const results = {};\n    const start = +node;\n    results[+start] = 0;\n    const startOffset = (_a = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.minPhotos) !== null && _a !== void 0 ? _a : 1;\n    const endOffset = Math.min(limitNodeSearch, (_b = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.maxPhotos) !== null && _b !== void 0 ? _b : Infinity);\n\n    for (let i = start + startOffset; i < photos.length + 1; i += 1) {\n      if (i - start > endOffset && !(instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.fullGraphSearch)) break;\n      const currentCost = cost(photos, start, i, containerWidth, targetRowHeight, spacing, padding);\n      if (currentCost === undefined) break;\n      results[i.toString()] = currentCost;\n    }\n\n    return results;\n  };\n};\n\nconst computeRowsLayout = _ref4 => {\n  let {\n    photos,\n    layoutOptions,\n    instrumentation\n  } = _ref4;\n\n  var _a, _b;\n\n  const {\n    spacing,\n    padding,\n    containerWidth,\n    targetRowHeight,\n    rowConstraints\n  } = layoutOptions;\n  (_a = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onStartLayoutComputation) === null || _a === void 0 ? void 0 : _a.call(instrumentation);\n  const limitNodeSearch = findIdealNodeSearch({\n    photos,\n    containerWidth,\n    targetRowHeight\n  });\n  const getNeighbors = makeGetNeighbors$1({\n    photos,\n    layoutOptions,\n    targetRowHeight,\n    limitNodeSearch,\n    rowConstraints,\n    instrumentation\n  });\n  const path = findShortestPath(getNeighbors, \"0\", `${photos.length}`);\n  if (path === undefined) return undefined;\n  const result = [];\n\n  for (let i = 1; i < path.length; i += 1) {\n    const row = photos.map((photo, index) => ({\n      photo,\n      index\n    })).slice(+path[i - 1], +path[i]);\n    const height = getCommonHeight(row.map(_ref5 => {\n      let {\n        photo\n      } = _ref5;\n      return photo;\n    }), containerWidth, spacing, padding);\n    result.push(row.map((_ref6, photoIndex) => {\n      let {\n        photo,\n        index\n      } = _ref6;\n      return {\n        photo,\n        layout: {\n          height,\n          width: height * ratio(photo),\n          index,\n          photoIndex,\n          photosCount: row.length\n        }\n      };\n    }));\n  }\n\n  (_b = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onFinishLayoutComputation) === null || _b === void 0 ? void 0 : _b.call(instrumentation, result);\n  return result;\n};\n\nconst calcWidth = (base, _ref7, _ref8) => {\n  let {\n    width,\n    photosCount\n  } = _ref7;\n  let {\n    spacing,\n    padding,\n    containerWidth\n  } = _ref8;\n  const gaps = spacing * (photosCount - 1) + 2 * padding * photosCount;\n  return `calc((${base} - ${gaps}px) / ${round((containerWidth - gaps) / width, 5)})`;\n};\n\nconst cssWidth$1 = (layout, layoutOptions) => {\n  if (layoutOptions.layout !== \"rows\") {\n    return `calc(100% - ${2 * layoutOptions.padding}px)`;\n  }\n\n  return calcWidth(\"100%\", layout, layoutOptions);\n};\n\nconst calculateSizesValue = (size, layout, layoutOptions) => {\n  var _a, _b;\n\n  return calcWidth((_b = (_a = size.match(/calc\\((.*)\\)/)) === null || _a === void 0 ? void 0 : _a[1]) !== null && _b !== void 0 ? _b : size, layout, layoutOptions);\n};\n\nconst srcSetAndSizes = (photo, layout, layoutOptions) => {\n  let srcSet, sizes;\n\n  if (photo.images && photo.images.length > 0) {\n    srcSet = photo.images.concat([{\n      src: photo.src,\n      width: photo.width,\n      height: photo.height\n    }]).sort((first, second) => first.width - second.width).map(image => `${image.src} ${image.width}w`).join(\", \");\n  }\n\n  if (layoutOptions.sizes) {\n    sizes = (layoutOptions.sizes.sizes || []).map(_ref9 => {\n      let {\n        viewport,\n        size\n      } = _ref9;\n      return `${viewport} ${calculateSizesValue(size, layout, layoutOptions)}`;\n    }).concat(calculateSizesValue(layoutOptions.sizes.size, layout, layoutOptions)).join(\", \");\n  } else {\n    sizes = `${Math.ceil(layout.width / (layoutOptions.viewportWidth || layoutOptions.containerWidth) * 100)}vw`;\n  }\n\n  return {\n    srcSet,\n    sizes\n  };\n};\n\nconst defaultRenderPhoto = _ref10 => {\n  let {\n    imageProps\n  } = _ref10;\n  const {\n    src,\n    alt,\n    srcSet,\n    sizes,\n    ...rest\n  } = imageProps;\n  return jsx(\"img\", {\n    src: src,\n    alt: alt,\n    ...(srcSet ? {\n      srcSet,\n      sizes\n    } : null),\n    ...rest\n  });\n};\n\nconst PhotoRenderer = props => {\n  var _a;\n\n  const {\n    photo,\n    layout,\n    layoutOptions,\n    imageProps: {\n      style,\n      ...restImageProps\n    } = {},\n    renderPhoto\n  } = props;\n  const {\n    onClick\n  } = layoutOptions;\n  const imageStyle = {\n    display: \"block\",\n    boxSizing: \"content-box\",\n    width: cssWidth$1(layout, layoutOptions),\n    height: \"auto\",\n    aspectRatio: `${photo.width} / ${photo.height}`,\n    ...(layoutOptions.padding ? {\n      padding: `${layoutOptions.padding}px`\n    } : null),\n    ...((layoutOptions.layout === \"columns\" || layoutOptions.layout === \"masonry\") && layout.photoIndex < layout.photosCount - 1 ? {\n      marginBottom: `${layoutOptions.spacing}px`\n    } : null),\n    ...(onClick ? {\n      cursor: \"pointer\"\n    } : null),\n    ...style\n  };\n  const handleClick = onClick ? event => {\n    onClick(event, photo, layout.index);\n  } : undefined;\n  const imageProps = {\n    src: photo.src,\n    alt: (_a = photo.alt) !== null && _a !== void 0 ? _a : \"\",\n    title: photo.title,\n    onClick: handleClick,\n    style: imageStyle,\n    className: \"react-photo-album--photo\",\n    ...srcSetAndSizes(photo, layout, layoutOptions),\n    ...restImageProps\n  };\n  return (renderPhoto !== null && renderPhoto !== void 0 ? renderPhoto : defaultRenderPhoto)({\n    photo,\n    layout,\n    layoutOptions,\n    imageProps\n  });\n};\n\nconst defaultRenderRowContainer = _ref11 => {\n  let {\n    rowContainerProps,\n    children\n  } = _ref11;\n  return jsx(\"div\", { ...rowContainerProps,\n    children: children\n  });\n};\n\nconst RowContainerRenderer = props => {\n  const {\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    renderRowContainer,\n    rowContainerProps: {\n      style,\n      ...restRowContainerProps\n    } = {},\n    children\n  } = props;\n  const rowContainerProps = {\n    className: \"react-photo-album--row\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      justifyContent: \"space-between\",\n      ...(rowIndex < rowsCount - 1 ? {\n        marginBottom: `${layoutOptions.spacing}px`\n      } : null),\n      ...style\n    },\n    ...restRowContainerProps\n  };\n  return (renderRowContainer !== null && renderRowContainer !== void 0 ? renderRowContainer : defaultRenderRowContainer)({\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    rowContainerProps,\n    children\n  });\n};\n\nconst RowsLayout = props => {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderRowContainer,\n    componentsProps,\n    instrumentation\n  } = props;\n  const rowsLayout = computeRowsLayout({\n    photos,\n    layoutOptions,\n    instrumentation\n  });\n  if (rowsLayout === undefined) return jsx(Fragment, {});\n  return jsx(Fragment, {\n    children: rowsLayout.map((row, rowIndex) => jsx(RowContainerRenderer, {\n      layoutOptions: layoutOptions,\n      rowIndex: rowIndex,\n      rowsCount: rowsLayout.length,\n      renderRowContainer: renderRowContainer,\n      rowContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.rowContainerProps,\n      children: row.map(_ref12 => {\n        let {\n          photo,\n          layout\n        } = _ref12;\n        return jsx(PhotoRenderer, {\n          photo: photo,\n          layout: layout,\n          layoutOptions: layoutOptions,\n          renderPhoto: renderPhoto,\n          imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps\n        }, photo.key || photo.src);\n      })\n    }, `row-${rowIndex}`))\n  });\n};\n\nconst computeShortestPath = (graph, pathLength, startNode, endNode) => {\n  const comp = [];\n  const queue = {\n    0: {\n      [startNode]: null\n    }\n  };\n\n  for (let length = 0; length < pathLength; length += 1) {\n    Object.keys(queue[length]).forEach(n => {\n      const node = +n;\n      const accumulatedWeight = length > 0 && comp[node][length] ? comp[node][length][1] : 0;\n      graph(node).forEach(_ref13 => {\n        let {\n          neighbor,\n          weight\n        } = _ref13;\n\n        if (!comp[neighbor]) {\n          comp[neighbor] = [];\n        }\n\n        const newTotalWeight = accumulatedWeight + weight;\n\n        if (!comp[neighbor][length + 1] || comp[neighbor][length + 1][1] > newTotalWeight && (comp[neighbor][length + 1][1] / newTotalWeight > 1.0001 || node < comp[neighbor][length + 1][0])) {\n          comp[neighbor][length + 1] = [node, newTotalWeight];\n        }\n\n        if (length < pathLength - 1 && neighbor !== endNode) {\n          if (!queue[length + 1]) {\n            queue[length + 1] = {};\n          }\n\n          queue[length + 1][neighbor] = null;\n        }\n      });\n    });\n  }\n\n  return comp;\n};\n\nconst reconstructShortestPath = (comp, pathLength, endNode) => {\n  const path = [endNode];\n\n  for (let node = endNode, length = pathLength; length > 0; length -= 1) {\n    const [prevNode] = comp[node][length];\n    node = prevNode;\n    path.push(node);\n  }\n\n  return path.reverse();\n};\n\nconst findShortestPathLengthN = (graph, pathLength, startNode, endNode) => reconstructShortestPath(computeShortestPath(graph, pathLength, startNode, endNode), pathLength, endNode);\n\nconst makeGetNeighbors = _ref14 => {\n  let {\n    photos,\n    spacing,\n    padding,\n    targetColumnWidth,\n    targetColumnHeight,\n    instrumentation\n  } = _ref14;\n  return node => {\n    const results = [];\n    const cutOffHeight = targetColumnHeight * 1.5;\n    let height = targetColumnWidth / ratio(photos[node]) + 2 * padding;\n\n    for (let i = node + 1; i < photos.length + 1; i += 1) {\n      results.push({\n        neighbor: i,\n        weight: (targetColumnHeight - height) ** 2\n      });\n\n      if (height > cutOffHeight && !(instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.fullGraphSearch) || i === photos.length) {\n        break;\n      }\n\n      height += targetColumnWidth / ratio(photos[i]) + spacing + 2 * padding;\n    }\n\n    return results;\n  };\n};\n\nconst buildColumnsModel = _ref15 => {\n  let {\n    path,\n    photos,\n    containerWidth,\n    columnsGaps,\n    columnsRatios,\n    spacing,\n    padding\n  } = _ref15;\n  const columnsModel = [];\n  const totalRatio = columnsRatios.reduce((acc, ratio) => acc + ratio, 0);\n\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.map((photo, index) => ({\n      photo,\n      index\n    })).slice(path[i], path[i + 1]);\n    const totalAdjustedGaps = columnsRatios.reduce((acc, ratio, index) => acc + (columnsGaps[i] - columnsGaps[index]) * ratio, 0);\n    const columnWidth = (containerWidth - (path.length - 2) * spacing - 2 * (path.length - 1) * padding - totalAdjustedGaps) * columnsRatios[i] / totalRatio;\n    columnsModel.push(column.map((_ref16, photoIndex) => {\n      let {\n        photo,\n        index\n      } = _ref16;\n      return {\n        photo,\n        layout: {\n          width: columnWidth,\n          height: columnWidth / ratio(photo),\n          index,\n          photoIndex,\n          photosCount: column.length\n        }\n      };\n    }));\n  }\n\n  return columnsModel;\n};\n\nconst computeColumnsModel = _ref17 => {\n  let {\n    photos,\n    layoutOptions,\n    targetColumnWidth,\n    instrumentation\n  } = _ref17;\n  const {\n    columns,\n    spacing,\n    padding,\n    containerWidth\n  } = layoutOptions;\n  const columnsGaps = [];\n  const columnsRatios = [];\n\n  if (photos.length <= columns) {\n    for (let index = 0; index < photos.length; index += 1) {\n      columnsGaps[index] = 2 * padding;\n      columnsRatios[index] = ratio(photos[index]);\n    }\n\n    const columnsModel = buildColumnsModel({\n      path: Array.from({\n        length: photos.length + 1\n      }).map((_, index) => index),\n      photos,\n      columnsRatios,\n      columnsGaps,\n      containerWidth,\n      spacing,\n      padding\n    });\n    return {\n      columnsGaps,\n      columnsRatios,\n      columnsModel\n    };\n  }\n\n  const targetColumnHeight = (photos.reduce((acc, photo) => acc + targetColumnWidth / ratio(photo), 0) + spacing * (photos.length - columns) + 2 * padding * photos.length) / columns;\n  const getNeighbors = makeGetNeighbors({\n    photos,\n    targetColumnWidth,\n    targetColumnHeight,\n    spacing,\n    padding,\n    instrumentation\n  });\n  const path = findShortestPathLengthN(getNeighbors, columns, 0, photos.length).map(node => +node);\n\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.slice(path[i], path[i + 1]);\n    columnsGaps[i] = spacing * (column.length - 1) + 2 * padding * column.length;\n    columnsRatios[i] = 1 / column.reduce((acc, photo) => acc + 1 / ratio(photo), 0);\n  }\n\n  const columnsModel = buildColumnsModel({\n    path,\n    photos,\n    columnsRatios,\n    columnsGaps,\n    containerWidth,\n    spacing,\n    padding\n  });\n  return {\n    columnsGaps,\n    columnsRatios,\n    columnsModel\n  };\n};\n\nconst computeLayout = props => {\n  const {\n    photos,\n    layoutOptions,\n    instrumentation\n  } = props;\n  const {\n    columns,\n    spacing,\n    padding,\n    containerWidth\n  } = layoutOptions;\n  const targetColumnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  const {\n    columnsGaps,\n    columnsRatios,\n    columnsModel\n  } = computeColumnsModel({\n    photos,\n    layoutOptions,\n    targetColumnWidth,\n    instrumentation\n  });\n\n  if (columnsModel.findIndex(columnModel => columnModel.findIndex(_ref18 => {\n    let {\n      layout: {\n        width,\n        height\n      }\n    } = _ref18;\n    return width < 0 || height < 0;\n  }) >= 0) >= 0) {\n    if (columns > 1) {\n      return computeLayout({\n        photos,\n        layoutOptions: { ...layoutOptions,\n          columns: columns - 1\n        },\n        instrumentation\n      });\n    } else {\n      return undefined;\n    }\n  }\n\n  return {\n    columnsModel,\n    columnsGaps,\n    columnsRatios\n  };\n};\n\nconst computeColumnsLayout = _ref19 => {\n  let {\n    photos,\n    layoutOptions,\n    instrumentation\n  } = _ref19;\n\n  var _a, _b;\n\n  (_a = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onStartLayoutComputation) === null || _a === void 0 ? void 0 : _a.call(instrumentation);\n  const result = computeLayout({\n    photos,\n    layoutOptions: { ...layoutOptions,\n      columns: Math.min(layoutOptions.columns, photos.length)\n    },\n    instrumentation\n  });\n  (_b = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onFinishLayoutComputation) === null || _b === void 0 ? void 0 : _b.call(instrumentation, result);\n  return result;\n};\n\nconst defaultRenderColumnContainer = _ref20 => {\n  let {\n    columnContainerProps,\n    children\n  } = _ref20;\n  return jsx(\"div\", { ...columnContainerProps,\n    children: children\n  });\n};\n\nconst cssWidth = props => {\n  const {\n    layoutOptions,\n    columnIndex,\n    columnsCount,\n    columnsGaps,\n    columnsRatios\n  } = props;\n  const {\n    layout,\n    spacing,\n    padding\n  } = layoutOptions;\n\n  if (layout === \"masonry\" || !columnsGaps || !columnsRatios) {\n    return `calc((100% - ${spacing * (columnsCount - 1)}px) / ${columnsCount})`;\n  }\n\n  const totalRatio = columnsRatios.reduce((acc, ratio) => acc + ratio, 0);\n  const totalAdjustedGaps = columnsRatios.reduce((acc, ratio, index) => acc + (columnsGaps[columnIndex] - columnsGaps[index]) * ratio, 0);\n  return `calc((100% - ${round((columnsCount - 1) * spacing + 2 * columnsCount * padding + totalAdjustedGaps, 3)}px) * ${round(columnsRatios[columnIndex] / totalRatio, 5)} + ${2 * padding}px)`;\n};\n\nconst ColumnContainerRenderer = props => {\n  const {\n    layoutOptions,\n    renderColumnContainer,\n    children,\n    columnContainerProps: {\n      style,\n      ...restColumnContainerProps\n    } = {},\n    ...rest\n  } = props;\n  const columnContainerProps = {\n    className: \"react-photo-album--column\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      width: cssWidth(props),\n      justifyContent: layoutOptions.layout === \"columns\" ? \"space-between\" : \"flex-start\",\n      ...style\n    },\n    ...restColumnContainerProps\n  };\n  return (renderColumnContainer !== null && renderColumnContainer !== void 0 ? renderColumnContainer : defaultRenderColumnContainer)({\n    layoutOptions,\n    columnContainerProps,\n    children,\n    ...rest\n  });\n};\n\nconst ColumnsLayout = props => {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps,\n    instrumentation\n  } = props;\n  const columnsLayout = computeColumnsLayout({\n    photos,\n    layoutOptions,\n    instrumentation\n  });\n  if (columnsLayout === undefined) return jsx(Fragment, {});\n  const {\n    columnsModel,\n    columnsRatios,\n    columnsGaps\n  } = columnsLayout;\n  return jsx(Fragment, {\n    children: columnsModel.map((column, columnIndex) => jsx(ColumnContainerRenderer, {\n      layoutOptions: layoutOptions,\n      columnIndex: columnIndex,\n      columnsCount: columnsModel.length,\n      columnsGaps: columnsGaps,\n      columnsRatios: columnsRatios,\n      renderColumnContainer: renderColumnContainer,\n      columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps,\n      children: column.map(_ref21 => {\n        let {\n          photo,\n          layout\n        } = _ref21;\n        return jsx(PhotoRenderer, {\n          photo: photo,\n          layout: layout,\n          layoutOptions: layoutOptions,\n          renderPhoto: renderPhoto,\n          imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps\n        }, photo.key || photo.src);\n      })\n    }, `column-${columnIndex}`))\n  });\n};\n\nconst computeMasonryLayout = props => {\n  var _a, _b;\n\n  const {\n    photos,\n    layoutOptions,\n    instrumentation\n  } = props;\n  const {\n    spacing,\n    padding,\n    containerWidth\n  } = layoutOptions;\n  const columns = Math.min(layoutOptions.columns, photos.length);\n  (_a = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onStartLayoutComputation) === null || _a === void 0 ? void 0 : _a.call(instrumentation);\n  const columnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n\n  if (columnWidth <= 0) {\n    return columns > 1 ? computeMasonryLayout({ ...props,\n      layoutOptions: { ...layoutOptions,\n        columns: columns - 1\n      }\n    }) : undefined;\n  }\n\n  const columnsCurrentTopPositions = [];\n\n  for (let i = 0; i < columns; i += 1) {\n    columnsCurrentTopPositions[i] = 0;\n  }\n\n  const columnsModel = photos.reduce((acc, photo, index) => {\n    const shortestColumn = columnsCurrentTopPositions.reduce((acc, item, i) => item < columnsCurrentTopPositions[acc] - 1 ? i : acc, 0);\n    columnsCurrentTopPositions[shortestColumn] = columnsCurrentTopPositions[shortestColumn] + columnWidth / ratio(photo) + spacing + 2 * padding;\n\n    if (!acc[shortestColumn]) {\n      acc[shortestColumn] = [];\n    }\n\n    acc[shortestColumn].push({\n      photo,\n      index\n    });\n    return acc;\n  }, []);\n  const result = columnsModel.map(column => column.map((_ref22, photoIndex) => {\n    let {\n      photo,\n      index\n    } = _ref22;\n    return {\n      photo,\n      layout: {\n        width: columnWidth,\n        height: columnWidth / ratio(photo),\n        index,\n        photoIndex,\n        photosCount: column.length\n      }\n    };\n  }));\n  (_b = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onFinishLayoutComputation) === null || _b === void 0 ? void 0 : _b.call(instrumentation, result);\n  return result;\n};\n\nconst MasonryLayout = props => {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps,\n    instrumentation\n  } = props;\n  const masonryLayout = computeMasonryLayout({\n    photos,\n    layoutOptions,\n    instrumentation\n  });\n  if (masonryLayout === undefined) return jsx(Fragment, {});\n  return jsx(Fragment, {\n    children: masonryLayout.map((column, columnIndex) => jsx(ColumnContainerRenderer, {\n      layoutOptions: layoutOptions,\n      columnsCount: masonryLayout.length,\n      columnIndex: columnIndex,\n      renderColumnContainer: renderColumnContainer,\n      columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps,\n      children: column.map(_ref23 => {\n        let {\n          photo,\n          layout\n        } = _ref23;\n        return jsx(PhotoRenderer, {\n          photo: photo,\n          layout: layout,\n          layoutOptions: layoutOptions,\n          renderPhoto: renderPhoto,\n          imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps\n        }, photo.key || photo.src);\n      })\n    }, `masonry-column-${columnIndex}`))\n  });\n};\n\nconst defaultRenderContainer = _ref24 => {\n  let {\n    containerProps,\n    children,\n    containerRef\n  } = _ref24;\n  return jsx(\"div\", {\n    ref: containerRef,\n    ...containerProps,\n    children: children\n  });\n};\n\nconst ContainerRenderer = props => {\n  const {\n    layoutOptions,\n    renderContainer,\n    children,\n    containerRef,\n    containerProps: {\n      style,\n      ...restContainerProps\n    } = {}\n  } = props;\n  const {\n    layout\n  } = layoutOptions;\n  const containerProps = {\n    className: `react-photo-album react-photo-album--${layout}`,\n    style: {\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n      flexDirection: layout === \"rows\" ? \"column\" : \"row\",\n      ...style\n    },\n    ...restContainerProps\n  };\n\n  if (renderContainer && typeof renderContainer === \"object\") {\n    const Component = renderContainer;\n    return jsx(Component, {\n      ref: containerRef,\n      layoutOptions: layoutOptions,\n      containerProps: containerProps,\n      children: children\n    });\n  }\n\n  return (renderContainer !== null && renderContainer !== void 0 ? renderContainer : defaultRenderContainer)({\n    containerProps,\n    containerRef,\n    layoutOptions,\n    children\n  });\n};\n\nconst useIsomorphicEffect = typeof document !== \"undefined\" ? useLayoutEffect : useEffect;\n\nconst arraysEqual = (a, b) => {\n  if (!a || !b || a.length !== b.length) return false;\n\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst useArray = array => {\n  const ref = useRef(array);\n\n  if (!arraysEqual(array, ref.current)) {\n    ref.current = array;\n  }\n\n  return ref.current;\n};\n\nconst useLatest = value => {\n  const ref = useRef(value);\n  ref.current = value;\n  return ref;\n};\n\nconst useContainerWidth = (resizeObserverProvider, breakpoints) => {\n  const [containerWidth, setContainerWidth] = useState();\n  const observerRef = useRef();\n  const breakpointsArray = useArray(breakpoints);\n  const resizeObserverProviderRef = useLatest(resizeObserverProvider);\n  const containerWidthRef = useLatest(containerWidth);\n  const scrollbarWidthRef = useRef();\n  const containerRef = useCallback(node => {\n    var _a, _b;\n\n    if (observerRef.current) {\n      observerRef.current.disconnect();\n      observerRef.current = undefined;\n    }\n\n    const updateWidth = () => {\n      let newWidth = node === null || node === void 0 ? void 0 : node.clientWidth;\n\n      if (newWidth !== undefined && breakpointsArray && breakpointsArray.length > 0) {\n        const sortedBreakpoints = [...breakpointsArray.filter(x => x > 0)].sort((a, b) => b - a);\n        sortedBreakpoints.push(Math.floor(sortedBreakpoints[sortedBreakpoints.length - 1] / 2));\n        const threshold = newWidth;\n        newWidth = sortedBreakpoints.find((breakpoint, index) => breakpoint <= threshold || index === sortedBreakpoints.length - 1);\n      }\n\n      const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\n      const previousScrollbarWidth = scrollbarWidthRef.current;\n      scrollbarWidthRef.current = scrollbarWidth;\n\n      if (containerWidthRef.current !== undefined && previousScrollbarWidth !== undefined && newWidth !== undefined && newWidth > containerWidthRef.current && newWidth - containerWidthRef.current <= 20 && scrollbarWidth < previousScrollbarWidth) {\n        return;\n      }\n\n      setContainerWidth(newWidth);\n    };\n\n    updateWidth();\n\n    if (node) {\n      observerRef.current = typeof ResizeObserver !== \"undefined\" ? new ResizeObserver(updateWidth) : (_a = resizeObserverProviderRef.current) === null || _a === void 0 ? void 0 : _a.call(resizeObserverProviderRef, updateWidth);\n      (_b = observerRef.current) === null || _b === void 0 ? void 0 : _b.observe(node);\n    }\n  }, [breakpointsArray, resizeObserverProviderRef, containerWidthRef]);\n  return useMemo(() => ({\n    containerRef,\n    containerWidth\n  }), [containerRef, containerWidth]);\n};\n\nconst breakpoints = Object.freeze([1200, 600, 300, 0]);\n\nconst unwrap = (value, containerWidth) => typeof value === \"function\" ? value(containerWidth) : value;\n\nconst unwrapParameter = (value, containerWidth) => typeof value !== \"undefined\" ? unwrap(value, containerWidth) : undefined;\n\nconst selectResponsiveValue = (values, containerWidth) => {\n  const index = breakpoints.findIndex(breakpoint => breakpoint <= containerWidth);\n  return unwrap(values[index >= 0 ? index : 0], containerWidth);\n};\n\nconst resolveResponsiveParameter = function (parameter, containerWidth, values) {\n  let minValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  const value = unwrapParameter(parameter, containerWidth);\n  return Math.round(Math.max(value === undefined ? selectResponsiveValue(values, containerWidth) : value, minValue));\n};\n\nconst resolveLayoutOptions = _ref25 => {\n  let {\n    layout,\n    onClick,\n    viewportWidth,\n    containerWidth,\n    targetRowHeight,\n    rowConstraints,\n    columns,\n    spacing,\n    padding,\n    sizes\n  } = _ref25;\n  return {\n    layout,\n    onClick,\n    viewportWidth,\n    containerWidth,\n    columns: resolveResponsiveParameter(columns, containerWidth, [5, 4, 3, 2], 1),\n    spacing: resolveResponsiveParameter(spacing, containerWidth, [20, 15, 10, 5]),\n    padding: resolveResponsiveParameter(padding, containerWidth, [0, 0, 0, 0, 0]),\n    targetRowHeight: resolveResponsiveParameter(targetRowHeight, containerWidth, [w => w / 5, w => w / 4, w => w / 3, w => w / 2]),\n    sizes,\n    rowConstraints\n  };\n};\n\nconst resolveComponentsProps = (componentsProps, containerWidth) => typeof componentsProps === \"function\" ? componentsProps(containerWidth) : componentsProps;\n\nconst PhotoAlbum = props => {\n  const {\n    photos,\n    layout,\n    renderPhoto,\n    renderContainer,\n    renderRowContainer,\n    renderColumnContainer,\n    defaultContainerWidth,\n    resizeObserverProvider,\n    breakpoints,\n    instrumentation\n  } = props;\n  const [mounted, setMounted] = useState(false);\n  const {\n    containerRef,\n    containerWidth\n  } = useContainerWidth(resizeObserverProvider, breakpoints);\n  useIsomorphicEffect(() => setMounted(true), []);\n  if (!layout || ![\"rows\", \"columns\", \"masonry\"].includes(layout) || !Array.isArray(photos)) return jsx(Fragment, {});\n  const layoutOptions = resolveLayoutOptions({\n    containerWidth: mounted && containerWidth || defaultContainerWidth || 800,\n    viewportWidth: mounted && window.innerWidth || undefined,\n    ...props\n  });\n  const componentsProps = resolveComponentsProps(props.componentsProps, layoutOptions.containerWidth);\n  const commonLayoutProps = {\n    photos,\n    renderPhoto,\n    componentsProps,\n    instrumentation\n  };\n  return jsx(ContainerRenderer, {\n    containerRef: containerRef,\n    layoutOptions: layoutOptions,\n    renderContainer: renderContainer,\n    containerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.containerProps,\n    children: layout === \"rows\" ? jsx(RowsLayout, {\n      layoutOptions: layoutOptions,\n      renderRowContainer: renderRowContainer,\n      ...commonLayoutProps\n    }) : layout === \"columns\" ? jsx(ColumnsLayout, {\n      layoutOptions: layoutOptions,\n      renderColumnContainer: renderColumnContainer,\n      ...commonLayoutProps\n    }) : jsx(MasonryLayout, {\n      layoutOptions: layoutOptions,\n      renderColumnContainer: renderColumnContainer,\n      ...commonLayoutProps\n    })\n  });\n};\n\nexport { PhotoAlbum, PhotoAlbum as default };","map":{"version":3,"names":["jsx","Fragment","useLayoutEffect","useEffect","useRef","useMemo","useState","useCallback","ratio","width","height","round","value","decimals","factor","Math","Number","EPSILON","RankingFunctionComparator","rank","a","b","MinHeap","comparator","heap","compare","n","greater","i","j","swap","temp","swim","k","k2","sink","push","element","pop","undefined","max","size","buildPrecedentsMap","graph","startNode","endNode","precedentsMap","visited","storedShortestPaths","pQueue","el","weight","id","shortestNode","shortestNodeId","neighboringNodes","neighbor","newTotalWeight","getPathFromPrecedentsMap","nodes","reverse","findShortestPath","findIdealNodeSearch","photos","targetRowHeight","containerWidth","minRatio","reduce","acc","photo","min","MAX_VALUE","getCommonHeight","row","spacing","padding","rowWidth","length","totalAspectRatio","cost","slice","commonHeight","makeGetNeighbors$1","layoutOptions","limitNodeSearch","rowConstraints","instrumentation","node","_a","_b","results","start","startOffset","minPhotos","endOffset","maxPhotos","Infinity","fullGraphSearch","currentCost","toString","computeRowsLayout","onStartLayoutComputation","call","getNeighbors","path","result","map","index","photoIndex","layout","photosCount","onFinishLayoutComputation","calcWidth","base","gaps","cssWidth$1","calculateSizesValue","match","srcSetAndSizes","srcSet","sizes","images","concat","src","sort","first","second","image","join","viewport","ceil","viewportWidth","defaultRenderPhoto","imageProps","alt","rest","PhotoRenderer","props","style","restImageProps","renderPhoto","onClick","imageStyle","display","boxSizing","aspectRatio","marginBottom","cursor","handleClick","event","title","className","defaultRenderRowContainer","rowContainerProps","children","RowContainerRenderer","rowIndex","rowsCount","renderRowContainer","restRowContainerProps","flexDirection","flexWrap","alignItems","justifyContent","RowsLayout","componentsProps","rowsLayout","key","computeShortestPath","pathLength","comp","queue","Object","keys","forEach","accumulatedWeight","reconstructShortestPath","prevNode","findShortestPathLengthN","makeGetNeighbors","targetColumnWidth","targetColumnHeight","cutOffHeight","buildColumnsModel","columnsGaps","columnsRatios","columnsModel","totalRatio","column","totalAdjustedGaps","columnWidth","computeColumnsModel","columns","Array","from","_","computeLayout","findIndex","columnModel","computeColumnsLayout","defaultRenderColumnContainer","columnContainerProps","cssWidth","columnIndex","columnsCount","ColumnContainerRenderer","renderColumnContainer","restColumnContainerProps","ColumnsLayout","columnsLayout","computeMasonryLayout","columnsCurrentTopPositions","shortestColumn","item","MasonryLayout","masonryLayout","defaultRenderContainer","containerProps","containerRef","ref","ContainerRenderer","renderContainer","restContainerProps","Component","useIsomorphicEffect","document","arraysEqual","l","useArray","array","current","useLatest","useContainerWidth","resizeObserverProvider","breakpoints","setContainerWidth","observerRef","breakpointsArray","resizeObserverProviderRef","containerWidthRef","scrollbarWidthRef","disconnect","updateWidth","newWidth","clientWidth","sortedBreakpoints","filter","x","floor","threshold","find","breakpoint","scrollbarWidth","window","innerWidth","documentElement","previousScrollbarWidth","ResizeObserver","observe","freeze","unwrap","unwrapParameter","selectResponsiveValue","values","resolveResponsiveParameter","parameter","minValue","resolveLayoutOptions","w","resolveComponentsProps","PhotoAlbum","defaultContainerWidth","mounted","setMounted","includes","isArray","commonLayoutProps","default"],"sources":["/Users/gerardojballesteros/Documents/Proyectos Web/Marsmellow/marsmellow-app/node_modules/react-photo-album/dist/index.esm.js"],"sourcesContent":["import { jsx, Fragment } from 'react/jsx-runtime';\nimport { useLayoutEffect, useEffect, useRef, useMemo, useState, useCallback } from 'react';\n\nconst ratio = ({ width, height }) => width / height;\n\nconst round = (value, decimals = 0) => {\r\n    const factor = 10 ** decimals;\r\n    return Math.round((value + Number.EPSILON) * factor) / factor;\r\n};\n\nconst RankingFunctionComparator = (rank) => (a, b) => rank(b) - rank(a);\r\nconst MinHeap = (comparator) => {\r\n    const heap = [];\r\n    const compare = comparator;\r\n    let n = 0;\r\n    const greater = (i, j) => compare(heap[i], heap[j]) < 0;\r\n    const swap = (i, j) => {\r\n        const temp = heap[i];\r\n        heap[i] = heap[j];\r\n        heap[j] = temp;\r\n    };\r\n    const swim = (k) => {\r\n        let k2 = k >> 1;\r\n        while (k > 1 && greater(k2, k)) {\r\n            swap(k2, k);\r\n            k = k2;\r\n            k2 = k >> 1;\r\n        }\r\n    };\r\n    const sink = (k) => {\r\n        let j = k << 1;\r\n        while (j <= n) {\r\n            if (j < n && greater(j, j + 1))\r\n                j++;\r\n            if (!greater(k, j))\r\n                break;\r\n            swap(k, j);\r\n            k = j;\r\n            j = k << 1;\r\n        }\r\n    };\r\n    return {\r\n        push: (element) => {\r\n            n += 1;\r\n            heap[n] = element;\r\n            swim(n);\r\n        },\r\n        pop: () => {\r\n            if (n === 0)\r\n                return undefined;\r\n            swap(1, n);\r\n            n -= 1;\r\n            const max = heap.pop();\r\n            sink(1);\r\n            return max;\r\n        },\r\n        size: () => n,\r\n    };\r\n};\n\nconst buildPrecedentsMap = (graph, startNode, endNode) => {\r\n    const precedentsMap = {};\r\n    const visited = {};\r\n    const storedShortestPaths = {};\r\n    storedShortestPaths[startNode] = 0;\r\n    const pQueue = MinHeap(RankingFunctionComparator((el) => el.weight));\r\n    pQueue.push({ id: startNode, weight: 0 });\r\n    let shortestNode;\r\n    while ((shortestNode = pQueue.pop()) !== undefined) {\r\n        const shortestNodeId = shortestNode.id;\r\n        if (visited[shortestNodeId])\r\n            continue;\r\n        const neighboringNodes = graph(shortestNodeId);\r\n        visited[shortestNodeId] = 1;\r\n        for (const neighbor in neighboringNodes) {\r\n            const newTotalWeight = shortestNode.weight + neighboringNodes[neighbor];\r\n            if (storedShortestPaths[neighbor] === undefined ||\r\n                (storedShortestPaths[neighbor] > newTotalWeight &&\r\n                    (storedShortestPaths[neighbor] / newTotalWeight > 1.005 ||\r\n                        precedentsMap[neighbor] < shortestNodeId))) {\r\n                storedShortestPaths[neighbor] = newTotalWeight;\r\n                pQueue.push({ id: neighbor, weight: newTotalWeight });\r\n                precedentsMap[neighbor] = shortestNodeId;\r\n            }\r\n        }\r\n    }\r\n    if (typeof storedShortestPaths[endNode] === \"undefined\") {\r\n        return undefined;\r\n    }\r\n    return precedentsMap;\r\n};\r\nconst getPathFromPrecedentsMap = (precedentsMap, endNode) => {\r\n    const nodes = [];\r\n    let n = endNode;\r\n    while (n) {\r\n        nodes.push(n);\r\n        n = precedentsMap[n];\r\n    }\r\n    return nodes.reverse();\r\n};\r\nconst findShortestPath = (graph, startNode, endNode) => {\r\n    const precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\r\n    return precedentsMap !== undefined ? getPathFromPrecedentsMap(precedentsMap, endNode) : undefined;\r\n};\n\nconst findIdealNodeSearch = ({ photos, targetRowHeight, containerWidth, }) => {\r\n    const minRatio = photos.reduce((acc, photo) => Math.min(ratio(photo), acc), Number.MAX_VALUE);\r\n    return round(containerWidth / targetRowHeight / minRatio) + 2;\r\n};\r\nconst getCommonHeight = (row, containerWidth, spacing, padding) => {\r\n    const rowWidth = containerWidth - (row.length - 1) * spacing - 2 * padding * row.length;\r\n    const totalAspectRatio = row.reduce((acc, photo) => acc + ratio(photo), 0);\r\n    return rowWidth / totalAspectRatio;\r\n};\r\nconst cost = (photos, i, j, width, targetRowHeight, spacing, padding) => {\r\n    const row = photos.slice(i, j);\r\n    const commonHeight = getCommonHeight(row, width, spacing, padding);\r\n    return commonHeight > 0 ? (commonHeight - targetRowHeight) ** 2 * row.length : undefined;\r\n};\r\nconst makeGetNeighbors$1 = ({ photos, layoutOptions, targetRowHeight, limitNodeSearch, rowConstraints, instrumentation, }) => (node) => {\r\n    var _a, _b;\r\n    const { containerWidth, spacing, padding } = layoutOptions;\r\n    const results = {};\r\n    const start = +node;\r\n    results[+start] = 0;\r\n    const startOffset = (_a = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.minPhotos) !== null && _a !== void 0 ? _a : 1;\r\n    const endOffset = Math.min(limitNodeSearch, (_b = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.maxPhotos) !== null && _b !== void 0 ? _b : Infinity);\r\n    for (let i = start + startOffset; i < photos.length + 1; i += 1) {\r\n        if (i - start > endOffset && !(instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.fullGraphSearch))\r\n            break;\r\n        const currentCost = cost(photos, start, i, containerWidth, targetRowHeight, spacing, padding);\r\n        if (currentCost === undefined)\r\n            break;\r\n        results[i.toString()] = currentCost;\r\n    }\r\n    return results;\r\n};\r\nconst computeRowsLayout = ({ photos, layoutOptions, instrumentation, }) => {\r\n    var _a, _b;\r\n    const { spacing, padding, containerWidth, targetRowHeight, rowConstraints } = layoutOptions;\r\n    (_a = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onStartLayoutComputation) === null || _a === void 0 ? void 0 : _a.call(instrumentation);\r\n    const limitNodeSearch = findIdealNodeSearch({ photos, containerWidth, targetRowHeight });\r\n    const getNeighbors = makeGetNeighbors$1({\r\n        photos,\r\n        layoutOptions,\r\n        targetRowHeight,\r\n        limitNodeSearch,\r\n        rowConstraints,\r\n        instrumentation,\r\n    });\r\n    const path = findShortestPath(getNeighbors, \"0\", `${photos.length}`);\r\n    if (path === undefined)\r\n        return undefined;\r\n    const result = [];\r\n    for (let i = 1; i < path.length; i += 1) {\r\n        const row = photos.map((photo, index) => ({ photo, index })).slice(+path[i - 1], +path[i]);\r\n        const height = getCommonHeight(row.map(({ photo }) => photo), containerWidth, spacing, padding);\r\n        result.push(row.map(({ photo, index }, photoIndex) => ({\r\n            photo,\r\n            layout: {\r\n                height,\r\n                width: height * ratio(photo),\r\n                index,\r\n                photoIndex,\r\n                photosCount: row.length,\r\n            },\r\n        })));\r\n    }\r\n    (_b = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onFinishLayoutComputation) === null || _b === void 0 ? void 0 : _b.call(instrumentation, result);\r\n    return result;\r\n};\n\nconst calcWidth = (base, { width, photosCount }, { spacing, padding, containerWidth }) => {\r\n    const gaps = spacing * (photosCount - 1) + 2 * padding * photosCount;\r\n    return `calc((${base} - ${gaps}px) / ${round((containerWidth - gaps) / width, 5)})`;\r\n};\r\nconst cssWidth$1 = (layout, layoutOptions) => {\r\n    if (layoutOptions.layout !== \"rows\") {\r\n        return `calc(100% - ${2 * layoutOptions.padding}px)`;\r\n    }\r\n    return calcWidth(\"100%\", layout, layoutOptions);\r\n};\r\nconst calculateSizesValue = (size, layout, layoutOptions) => { var _a, _b; return calcWidth((_b = (_a = size.match(/calc\\((.*)\\)/)) === null || _a === void 0 ? void 0 : _a[1]) !== null && _b !== void 0 ? _b : size, layout, layoutOptions); };\r\nconst srcSetAndSizes = (photo, layout, layoutOptions) => {\r\n    let srcSet, sizes;\r\n    if (photo.images && photo.images.length > 0) {\r\n        srcSet = photo.images\r\n            .concat([\r\n            {\r\n                src: photo.src,\r\n                width: photo.width,\r\n                height: photo.height,\r\n            },\r\n        ])\r\n            .sort((first, second) => first.width - second.width)\r\n            .map((image) => `${image.src} ${image.width}w`)\r\n            .join(\", \");\r\n    }\r\n    if (layoutOptions.sizes) {\r\n        sizes = (layoutOptions.sizes.sizes || [])\r\n            .map(({ viewport, size }) => `${viewport} ${calculateSizesValue(size, layout, layoutOptions)}`)\r\n            .concat(calculateSizesValue(layoutOptions.sizes.size, layout, layoutOptions))\r\n            .join(\", \");\r\n    }\r\n    else {\r\n        sizes = `${Math.ceil((layout.width / (layoutOptions.viewportWidth || layoutOptions.containerWidth)) * 100)}vw`;\r\n    }\r\n    return { srcSet, sizes };\r\n};\r\nconst defaultRenderPhoto = ({ imageProps }) => {\r\n    const { src, alt, srcSet, sizes, ...rest } = imageProps;\r\n    return jsx(\"img\", { src: src, alt: alt, ...(srcSet ? { srcSet, sizes } : null), ...rest });\r\n};\r\nconst PhotoRenderer = (props) => {\r\n    var _a;\r\n    const { photo, layout, layoutOptions, imageProps: { style, ...restImageProps } = {}, renderPhoto } = props;\r\n    const { onClick } = layoutOptions;\r\n    const imageStyle = {\r\n        display: \"block\",\r\n        boxSizing: \"content-box\",\r\n        width: cssWidth$1(layout, layoutOptions),\r\n        height: \"auto\",\r\n        aspectRatio: `${photo.width} / ${photo.height}`,\r\n        ...(layoutOptions.padding ? { padding: `${layoutOptions.padding}px` } : null),\r\n        ...((layoutOptions.layout === \"columns\" || layoutOptions.layout === \"masonry\") &&\r\n            layout.photoIndex < layout.photosCount - 1\r\n            ? { marginBottom: `${layoutOptions.spacing}px` }\r\n            : null),\r\n        ...(onClick ? { cursor: \"pointer\" } : null),\r\n        ...style,\r\n    };\r\n    const handleClick = onClick\r\n        ? (event) => {\r\n            onClick(event, photo, layout.index);\r\n        }\r\n        : undefined;\r\n    const imageProps = {\r\n        src: photo.src,\r\n        alt: (_a = photo.alt) !== null && _a !== void 0 ? _a : \"\",\r\n        title: photo.title,\r\n        onClick: handleClick,\r\n        style: imageStyle,\r\n        className: \"react-photo-album--photo\",\r\n        ...srcSetAndSizes(photo, layout, layoutOptions),\r\n        ...restImageProps,\r\n    };\r\n    return (renderPhoto !== null && renderPhoto !== void 0 ? renderPhoto : defaultRenderPhoto)({ photo, layout, layoutOptions, imageProps });\r\n};\n\nconst defaultRenderRowContainer = ({ rowContainerProps, children, }) => jsx(\"div\", { ...rowContainerProps, children: children });\r\nconst RowContainerRenderer = (props) => {\r\n    const { layoutOptions, rowIndex, rowsCount, renderRowContainer, rowContainerProps: { style, ...restRowContainerProps } = {}, children, } = props;\r\n    const rowContainerProps = {\r\n        className: \"react-photo-album--row\",\r\n        style: {\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            flexWrap: \"nowrap\",\r\n            alignItems: \"flex-start\",\r\n            justifyContent: \"space-between\",\r\n            ...(rowIndex < rowsCount - 1 ? { marginBottom: `${layoutOptions.spacing}px` } : null),\r\n            ...style,\r\n        },\r\n        ...restRowContainerProps,\r\n    };\r\n    return (renderRowContainer !== null && renderRowContainer !== void 0 ? renderRowContainer : defaultRenderRowContainer)({\r\n        layoutOptions,\r\n        rowIndex,\r\n        rowsCount,\r\n        rowContainerProps,\r\n        children,\r\n    });\r\n};\n\nconst RowsLayout = (props) => {\r\n    const { photos, layoutOptions, renderPhoto, renderRowContainer, componentsProps, instrumentation } = props;\r\n    const rowsLayout = computeRowsLayout({ photos, layoutOptions, instrumentation });\r\n    if (rowsLayout === undefined)\r\n        return jsx(Fragment, {});\r\n    return (jsx(Fragment, { children: rowsLayout.map((row, rowIndex) => (jsx(RowContainerRenderer, { layoutOptions: layoutOptions, rowIndex: rowIndex, rowsCount: rowsLayout.length, renderRowContainer: renderRowContainer, rowContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.rowContainerProps, children: row.map(({ photo, layout }) => (jsx(PhotoRenderer, { photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }, photo.key || photo.src))) }, `row-${rowIndex}`))) }));\r\n};\n\nconst computeShortestPath = (graph, pathLength, startNode, endNode) => {\r\n    const comp = [];\r\n    const queue = { 0: { [startNode]: null } };\r\n    for (let length = 0; length < pathLength; length += 1) {\r\n        Object.keys(queue[length]).forEach((n) => {\r\n            const node = +n;\r\n            const accumulatedWeight = length > 0 && comp[node][length] ? comp[node][length][1] : 0;\r\n            graph(node).forEach(({ neighbor, weight }) => {\r\n                if (!comp[neighbor]) {\r\n                    comp[neighbor] = [];\r\n                }\r\n                const newTotalWeight = accumulatedWeight + weight;\r\n                if (!comp[neighbor][length + 1] ||\r\n                    (comp[neighbor][length + 1][1] > newTotalWeight &&\r\n                        (comp[neighbor][length + 1][1] / newTotalWeight > 1.0001 ||\r\n                            node < comp[neighbor][length + 1][0]))) {\r\n                    comp[neighbor][length + 1] = [node, newTotalWeight];\r\n                }\r\n                if (length < pathLength - 1 && neighbor !== endNode) {\r\n                    if (!queue[length + 1]) {\r\n                        queue[length + 1] = {};\r\n                    }\r\n                    queue[length + 1][neighbor] = null;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    return comp;\r\n};\r\nconst reconstructShortestPath = (comp, pathLength, endNode) => {\r\n    const path = [endNode];\r\n    for (let node = endNode, length = pathLength; length > 0; length -= 1) {\r\n        const [prevNode] = comp[node][length];\r\n        node = prevNode;\r\n        path.push(node);\r\n    }\r\n    return path.reverse();\r\n};\r\nconst findShortestPathLengthN = (graph, pathLength, startNode, endNode) => reconstructShortestPath(computeShortestPath(graph, pathLength, startNode, endNode), pathLength, endNode);\n\nconst makeGetNeighbors = ({ photos, spacing, padding, targetColumnWidth, targetColumnHeight, instrumentation, }) => (node) => {\r\n    const results = [];\r\n    const cutOffHeight = targetColumnHeight * 1.5;\r\n    let height = targetColumnWidth / ratio(photos[node]) + 2 * padding;\r\n    for (let i = node + 1; i < photos.length + 1; i += 1) {\r\n        results.push({ neighbor: i, weight: (targetColumnHeight - height) ** 2 });\r\n        if ((height > cutOffHeight && !(instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.fullGraphSearch)) || i === photos.length) {\r\n            break;\r\n        }\r\n        height += targetColumnWidth / ratio(photos[i]) + spacing + 2 * padding;\r\n    }\r\n    return results;\r\n};\r\nconst buildColumnsModel = ({ path, photos, containerWidth, columnsGaps, columnsRatios, spacing, padding, }) => {\r\n    const columnsModel = [];\r\n    const totalRatio = columnsRatios.reduce((acc, ratio) => acc + ratio, 0);\r\n    for (let i = 0; i < path.length - 1; i += 1) {\r\n        const column = photos.map((photo, index) => ({ photo, index })).slice(path[i], path[i + 1]);\r\n        const totalAdjustedGaps = columnsRatios.reduce((acc, ratio, index) => acc + (columnsGaps[i] - columnsGaps[index]) * ratio, 0);\r\n        const columnWidth = ((containerWidth - (path.length - 2) * spacing - 2 * (path.length - 1) * padding - totalAdjustedGaps) *\r\n            columnsRatios[i]) /\r\n            totalRatio;\r\n        columnsModel.push(column.map(({ photo, index }, photoIndex) => ({\r\n            photo,\r\n            layout: {\r\n                width: columnWidth,\r\n                height: columnWidth / ratio(photo),\r\n                index,\r\n                photoIndex,\r\n                photosCount: column.length,\r\n            },\r\n        })));\r\n    }\r\n    return columnsModel;\r\n};\r\nconst computeColumnsModel = ({ photos, layoutOptions, targetColumnWidth, instrumentation, }) => {\r\n    const { columns, spacing, padding, containerWidth } = layoutOptions;\r\n    const columnsGaps = [];\r\n    const columnsRatios = [];\r\n    if (photos.length <= columns) {\r\n        for (let index = 0; index < photos.length; index += 1) {\r\n            columnsGaps[index] = 2 * padding;\r\n            columnsRatios[index] = ratio(photos[index]);\r\n        }\r\n        const columnsModel = buildColumnsModel({\r\n            path: Array.from({ length: photos.length + 1 }).map((_, index) => index),\r\n            photos,\r\n            columnsRatios,\r\n            columnsGaps,\r\n            containerWidth,\r\n            spacing,\r\n            padding,\r\n        });\r\n        return { columnsGaps, columnsRatios, columnsModel };\r\n    }\r\n    const targetColumnHeight = (photos.reduce((acc, photo) => acc + targetColumnWidth / ratio(photo), 0) +\r\n        spacing * (photos.length - columns) +\r\n        2 * padding * photos.length) /\r\n        columns;\r\n    const getNeighbors = makeGetNeighbors({\r\n        photos,\r\n        targetColumnWidth,\r\n        targetColumnHeight,\r\n        spacing,\r\n        padding,\r\n        instrumentation,\r\n    });\r\n    const path = findShortestPathLengthN(getNeighbors, columns, 0, photos.length).map((node) => +node);\r\n    for (let i = 0; i < path.length - 1; i += 1) {\r\n        const column = photos.slice(path[i], path[i + 1]);\r\n        columnsGaps[i] = spacing * (column.length - 1) + 2 * padding * column.length;\r\n        columnsRatios[i] = 1 / column.reduce((acc, photo) => acc + 1 / ratio(photo), 0);\r\n    }\r\n    const columnsModel = buildColumnsModel({\r\n        path,\r\n        photos,\r\n        columnsRatios,\r\n        columnsGaps,\r\n        containerWidth,\r\n        spacing,\r\n        padding,\r\n    });\r\n    return { columnsGaps, columnsRatios, columnsModel };\r\n};\r\nconst computeLayout = (props) => {\r\n    const { photos, layoutOptions, instrumentation } = props;\r\n    const { columns, spacing, padding, containerWidth } = layoutOptions;\r\n    const targetColumnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\r\n    const { columnsGaps, columnsRatios, columnsModel } = computeColumnsModel({\r\n        photos,\r\n        layoutOptions,\r\n        targetColumnWidth,\r\n        instrumentation,\r\n    });\r\n    if (columnsModel.findIndex((columnModel) => columnModel.findIndex(({ layout: { width, height } }) => width < 0 || height < 0) >= 0) >= 0) {\r\n        if (columns > 1) {\r\n            return computeLayout({\r\n                photos,\r\n                layoutOptions: {\r\n                    ...layoutOptions,\r\n                    columns: columns - 1,\r\n                },\r\n                instrumentation,\r\n            });\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    return { columnsModel, columnsGaps, columnsRatios };\r\n};\r\nconst computeColumnsLayout = ({ photos, layoutOptions, instrumentation, }) => {\r\n    var _a, _b;\r\n    (_a = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onStartLayoutComputation) === null || _a === void 0 ? void 0 : _a.call(instrumentation);\r\n    const result = computeLayout({\r\n        photos,\r\n        layoutOptions: {\r\n            ...layoutOptions,\r\n            columns: Math.min(layoutOptions.columns, photos.length),\r\n        },\r\n        instrumentation,\r\n    });\r\n    (_b = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onFinishLayoutComputation) === null || _b === void 0 ? void 0 : _b.call(instrumentation, result);\r\n    return result;\r\n};\n\nconst defaultRenderColumnContainer = ({ columnContainerProps, children, }) => jsx(\"div\", { ...columnContainerProps, children: children });\r\nconst cssWidth = (props) => {\r\n    const { layoutOptions, columnIndex, columnsCount, columnsGaps, columnsRatios } = props;\r\n    const { layout, spacing, padding } = layoutOptions;\r\n    if (layout === \"masonry\" || !columnsGaps || !columnsRatios) {\r\n        return `calc((100% - ${spacing * (columnsCount - 1)}px) / ${columnsCount})`;\r\n    }\r\n    const totalRatio = columnsRatios.reduce((acc, ratio) => acc + ratio, 0);\r\n    const totalAdjustedGaps = columnsRatios.reduce((acc, ratio, index) => acc + (columnsGaps[columnIndex] - columnsGaps[index]) * ratio, 0);\r\n    return `calc((100% - ${round((columnsCount - 1) * spacing + 2 * columnsCount * padding + totalAdjustedGaps, 3)}px) * ${round(columnsRatios[columnIndex] / totalRatio, 5)} + ${2 * padding}px)`;\r\n};\r\nconst ColumnContainerRenderer = (props) => {\r\n    const { layoutOptions, renderColumnContainer, children, columnContainerProps: { style, ...restColumnContainerProps } = {}, ...rest } = props;\r\n    const columnContainerProps = {\r\n        className: \"react-photo-album--column\",\r\n        style: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            flexWrap: \"nowrap\",\r\n            alignItems: \"flex-start\",\r\n            width: cssWidth(props),\r\n            justifyContent: layoutOptions.layout === \"columns\" ? \"space-between\" : \"flex-start\",\r\n            ...style,\r\n        },\r\n        ...restColumnContainerProps,\r\n    };\r\n    return (renderColumnContainer !== null && renderColumnContainer !== void 0 ? renderColumnContainer : defaultRenderColumnContainer)({\r\n        layoutOptions,\r\n        columnContainerProps,\r\n        children,\r\n        ...rest,\r\n    });\r\n};\n\nconst ColumnsLayout = (props) => {\r\n    const { photos, layoutOptions, renderPhoto, renderColumnContainer, componentsProps, instrumentation } = props;\r\n    const columnsLayout = computeColumnsLayout({ photos, layoutOptions, instrumentation });\r\n    if (columnsLayout === undefined)\r\n        return jsx(Fragment, {});\r\n    const { columnsModel, columnsRatios, columnsGaps } = columnsLayout;\r\n    return (jsx(Fragment, { children: columnsModel.map((column, columnIndex) => (jsx(ColumnContainerRenderer, { layoutOptions: layoutOptions, columnIndex: columnIndex, columnsCount: columnsModel.length, columnsGaps: columnsGaps, columnsRatios: columnsRatios, renderColumnContainer: renderColumnContainer, columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps, children: column.map(({ photo, layout }) => (jsx(PhotoRenderer, { photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }, photo.key || photo.src))) }, `column-${columnIndex}`))) }));\r\n};\n\nconst computeMasonryLayout = (props) => {\r\n    var _a, _b;\r\n    const { photos, layoutOptions, instrumentation } = props;\r\n    const { spacing, padding, containerWidth } = layoutOptions;\r\n    const columns = Math.min(layoutOptions.columns, photos.length);\r\n    (_a = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onStartLayoutComputation) === null || _a === void 0 ? void 0 : _a.call(instrumentation);\r\n    const columnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\r\n    if (columnWidth <= 0) {\r\n        return columns > 1\r\n            ? computeMasonryLayout({\r\n                ...props,\r\n                layoutOptions: { ...layoutOptions, columns: columns - 1 },\r\n            })\r\n            : undefined;\r\n    }\r\n    const columnsCurrentTopPositions = [];\r\n    for (let i = 0; i < columns; i += 1) {\r\n        columnsCurrentTopPositions[i] = 0;\r\n    }\r\n    const columnsModel = photos.reduce((acc, photo, index) => {\r\n        const shortestColumn = columnsCurrentTopPositions.reduce((acc, item, i) => item < columnsCurrentTopPositions[acc] - 1 ? i : acc, 0);\r\n        columnsCurrentTopPositions[shortestColumn] =\r\n            columnsCurrentTopPositions[shortestColumn] + columnWidth / ratio(photo) + spacing + 2 * padding;\r\n        if (!acc[shortestColumn]) {\r\n            acc[shortestColumn] = [];\r\n        }\r\n        acc[shortestColumn].push({ photo, index });\r\n        return acc;\r\n    }, []);\r\n    const result = columnsModel.map((column) => column.map(({ photo, index }, photoIndex) => ({\r\n        photo,\r\n        layout: {\r\n            width: columnWidth,\r\n            height: columnWidth / ratio(photo),\r\n            index,\r\n            photoIndex,\r\n            photosCount: column.length,\r\n        },\r\n    })));\r\n    (_b = instrumentation === null || instrumentation === void 0 ? void 0 : instrumentation.onFinishLayoutComputation) === null || _b === void 0 ? void 0 : _b.call(instrumentation, result);\r\n    return result;\r\n};\n\nconst MasonryLayout = (props) => {\r\n    const { photos, layoutOptions, renderPhoto, renderColumnContainer, componentsProps, instrumentation } = props;\r\n    const masonryLayout = computeMasonryLayout({ photos, layoutOptions, instrumentation });\r\n    if (masonryLayout === undefined)\r\n        return jsx(Fragment, {});\r\n    return (jsx(Fragment, { children: masonryLayout.map((column, columnIndex) => (jsx(ColumnContainerRenderer, { layoutOptions: layoutOptions, columnsCount: masonryLayout.length, columnIndex: columnIndex, renderColumnContainer: renderColumnContainer, columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps, children: column.map(({ photo, layout }) => (jsx(PhotoRenderer, { photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }, photo.key || photo.src))) }, `masonry-column-${columnIndex}`))) }));\r\n};\n\nconst defaultRenderContainer = ({ containerProps, children, containerRef, }) => (jsx(\"div\", { ref: containerRef, ...containerProps, children: children }));\r\nconst ContainerRenderer = (props) => {\r\n    const { layoutOptions, renderContainer, children, containerRef, containerProps: { style, ...restContainerProps } = {}, } = props;\r\n    const { layout } = layoutOptions;\r\n    const containerProps = {\r\n        className: `react-photo-album react-photo-album--${layout}`,\r\n        style: {\r\n            display: \"flex\",\r\n            flexWrap: \"nowrap\",\r\n            justifyContent: \"space-between\",\r\n            flexDirection: layout === \"rows\" ? \"column\" : \"row\",\r\n            ...style,\r\n        },\r\n        ...restContainerProps,\r\n    };\r\n    if (renderContainer && typeof renderContainer === \"object\") {\r\n        const Component = renderContainer;\r\n        return (jsx(Component, { ref: containerRef, layoutOptions: layoutOptions, containerProps: containerProps, children: children }));\r\n    }\r\n    return (renderContainer !== null && renderContainer !== void 0 ? renderContainer : defaultRenderContainer)({\r\n        containerProps,\r\n        containerRef,\r\n        layoutOptions,\r\n        children,\r\n    });\r\n};\n\nconst useIsomorphicEffect = typeof document !== \"undefined\" ? useLayoutEffect : useEffect;\n\nconst arraysEqual = (a, b) => {\r\n    if (!a || !b || a.length !== b.length)\r\n        return false;\r\n    for (let i = 0, l = a.length; i < l; i++) {\r\n        if (a[i] !== b[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\nconst useArray = (array) => {\r\n    const ref = useRef(array);\r\n    if (!arraysEqual(array, ref.current)) {\r\n        ref.current = array;\r\n    }\r\n    return ref.current;\r\n};\n\nconst useLatest = (value) => {\r\n    const ref = useRef(value);\r\n    ref.current = value;\r\n    return ref;\r\n};\n\nconst useContainerWidth = (resizeObserverProvider, breakpoints) => {\r\n    const [containerWidth, setContainerWidth] = useState();\r\n    const observerRef = useRef();\r\n    const breakpointsArray = useArray(breakpoints);\r\n    const resizeObserverProviderRef = useLatest(resizeObserverProvider);\r\n    const containerWidthRef = useLatest(containerWidth);\r\n    const scrollbarWidthRef = useRef();\r\n    const containerRef = useCallback((node) => {\r\n        var _a, _b;\r\n        if (observerRef.current) {\r\n            observerRef.current.disconnect();\r\n            observerRef.current = undefined;\r\n        }\r\n        const updateWidth = () => {\r\n            let newWidth = node === null || node === void 0 ? void 0 : node.clientWidth;\r\n            if (newWidth !== undefined && breakpointsArray && breakpointsArray.length > 0) {\r\n                const sortedBreakpoints = [...breakpointsArray.filter((x) => x > 0)].sort((a, b) => b - a);\r\n                sortedBreakpoints.push(Math.floor(sortedBreakpoints[sortedBreakpoints.length - 1] / 2));\r\n                const threshold = newWidth;\r\n                newWidth = sortedBreakpoints.find((breakpoint, index) => breakpoint <= threshold || index === sortedBreakpoints.length - 1);\r\n            }\r\n            const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\r\n            const previousScrollbarWidth = scrollbarWidthRef.current;\r\n            scrollbarWidthRef.current = scrollbarWidth;\r\n            if (containerWidthRef.current !== undefined &&\r\n                previousScrollbarWidth !== undefined &&\r\n                newWidth !== undefined &&\r\n                newWidth > containerWidthRef.current &&\r\n                newWidth - containerWidthRef.current <= 20 &&\r\n                scrollbarWidth < previousScrollbarWidth) {\r\n                return;\r\n            }\r\n            setContainerWidth(newWidth);\r\n        };\r\n        updateWidth();\r\n        if (node) {\r\n            observerRef.current =\r\n                typeof ResizeObserver !== \"undefined\"\r\n                    ? new ResizeObserver(updateWidth)\r\n                    : (_a = resizeObserverProviderRef.current) === null || _a === void 0 ? void 0 : _a.call(resizeObserverProviderRef, updateWidth);\r\n            (_b = observerRef.current) === null || _b === void 0 ? void 0 : _b.observe(node);\r\n        }\r\n    }, [breakpointsArray, resizeObserverProviderRef, containerWidthRef]);\r\n    return useMemo(() => ({ containerRef, containerWidth }), [containerRef, containerWidth]);\r\n};\n\nconst breakpoints = Object.freeze([1200, 600, 300, 0]);\r\nconst unwrap = (value, containerWidth) => typeof value === \"function\" ? value(containerWidth) : value;\r\nconst unwrapParameter = (value, containerWidth) => typeof value !== \"undefined\" ? unwrap(value, containerWidth) : undefined;\r\nconst selectResponsiveValue = (values, containerWidth) => {\r\n    const index = breakpoints.findIndex((breakpoint) => breakpoint <= containerWidth);\r\n    return unwrap(values[index >= 0 ? index : 0], containerWidth);\r\n};\r\nconst resolveResponsiveParameter = (parameter, containerWidth, values, minValue = 0) => {\r\n    const value = unwrapParameter(parameter, containerWidth);\r\n    return Math.round(Math.max(value === undefined ? selectResponsiveValue(values, containerWidth) : value, minValue));\r\n};\n\nconst resolveLayoutOptions = ({ layout, onClick, viewportWidth, containerWidth, targetRowHeight, rowConstraints, columns, spacing, padding, sizes, }) => ({\r\n    layout,\r\n    onClick,\r\n    viewportWidth,\r\n    containerWidth,\r\n    columns: resolveResponsiveParameter(columns, containerWidth, [5, 4, 3, 2], 1),\r\n    spacing: resolveResponsiveParameter(spacing, containerWidth, [20, 15, 10, 5]),\r\n    padding: resolveResponsiveParameter(padding, containerWidth, [0, 0, 0, 0, 0]),\r\n    targetRowHeight: resolveResponsiveParameter(targetRowHeight, containerWidth, [\r\n        (w) => w / 5,\r\n        (w) => w / 4,\r\n        (w) => w / 3,\r\n        (w) => w / 2,\r\n    ]),\r\n    sizes,\r\n    rowConstraints,\r\n});\r\nconst resolveComponentsProps = (componentsProps, containerWidth) => typeof componentsProps === \"function\" ? componentsProps(containerWidth) : componentsProps;\r\nconst PhotoAlbum = (props) => {\r\n    const { photos, layout, renderPhoto, renderContainer, renderRowContainer, renderColumnContainer, defaultContainerWidth, resizeObserverProvider, breakpoints, instrumentation, } = props;\r\n    const [mounted, setMounted] = useState(false);\r\n    const { containerRef, containerWidth } = useContainerWidth(resizeObserverProvider, breakpoints);\r\n    useIsomorphicEffect(() => setMounted(true), []);\r\n    if (!layout || ![\"rows\", \"columns\", \"masonry\"].includes(layout) || !Array.isArray(photos))\r\n        return jsx(Fragment, {});\r\n    const layoutOptions = resolveLayoutOptions({\r\n        containerWidth: (mounted && containerWidth) || defaultContainerWidth || 800,\r\n        viewportWidth: (mounted && window.innerWidth) || undefined,\r\n        ...props,\r\n    });\r\n    const componentsProps = resolveComponentsProps(props.componentsProps, layoutOptions.containerWidth);\r\n    const commonLayoutProps = { photos, renderPhoto, componentsProps, instrumentation };\r\n    return (jsx(ContainerRenderer, { containerRef: containerRef, layoutOptions: layoutOptions, renderContainer: renderContainer, containerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.containerProps, children: layout === \"rows\" ? (jsx(RowsLayout, { layoutOptions: layoutOptions, renderRowContainer: renderRowContainer, ...commonLayoutProps })) : layout === \"columns\" ? (jsx(ColumnsLayout, { layoutOptions: layoutOptions, renderColumnContainer: renderColumnContainer, ...commonLayoutProps })) : (jsx(MasonryLayout, { layoutOptions: layoutOptions, renderColumnContainer: renderColumnContainer, ...commonLayoutProps })) }));\r\n};\n\nexport { PhotoAlbum, PhotoAlbum as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}