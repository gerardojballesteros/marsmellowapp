{"ast":null,"code":"function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/*!\n * Observer 3.10.4\n * https://greensock.com\n *\n * @license Copyright 2008-2022, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\n\n\nvar gsap,\n    _coreInitted,\n    _clamp,\n    _win,\n    _doc,\n    _docEl,\n    _body,\n    _isTouch,\n    _pointerType,\n    ScrollTrigger,\n    _root,\n    _normalizer,\n    _eventTypes,\n    _getGSAP = function _getGSAP() {\n  return gsap || typeof window !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n},\n    _passThrough = function _passThrough(p) {\n  return p;\n},\n    _startup = 1,\n    _observers = [],\n    _scrollers = [],\n    _proxies = [],\n    _getTime = Date.now,\n    _bridge = function _bridge(name, value) {\n  return value;\n},\n    _integrate = function _integrate() {\n  var core = ScrollTrigger.core,\n      data = core.bridge || {},\n      scrollers = core._scrollers,\n      proxies = core._proxies;\n  scrollers.push.apply(scrollers, _scrollers);\n  proxies.push.apply(proxies, _proxies);\n  _scrollers = scrollers;\n  _proxies = proxies;\n\n  _bridge = function _bridge(name, value) {\n    return data[name](value);\n  };\n},\n    _getProxyProp = function _getProxyProp(element, property) {\n  return ~_proxies.indexOf(element) && _proxies[_proxies.indexOf(element) + 1][property];\n},\n    _isViewport = function _isViewport(el) {\n  return !!~_root.indexOf(el);\n},\n    _addListener = function _addListener(element, type, func, nonPassive, capture) {\n  return element.addEventListener(type, func, {\n    passive: !nonPassive,\n    capture: !!capture\n  });\n},\n    _removeListener = function _removeListener(element, type, func, capture) {\n  return element.removeEventListener(type, func, !!capture);\n},\n    _scrollLeft = \"scrollLeft\",\n    _scrollTop = \"scrollTop\",\n    _onScroll = function _onScroll() {\n  return _normalizer && _normalizer.isPressed || _scrollers.cache++;\n},\n    _scrollCacheFunc = function _scrollCacheFunc(f, doNotCache) {\n  var cachingFunc = function cachingFunc(value) {\n    // since reading the scrollTop/scrollLeft/pageOffsetY/pageOffsetX can trigger a layout, this function allows us to cache the value so it only gets read fresh after a \"scroll\" event fires (or while we're refreshing because that can lengthen the page and alter the scroll position). when \"soft\" is true, that means don't actually set the scroll, but cache the new value instead (useful in ScrollSmoother)\n    if (value || value === 0) {\n      _startup && (_win.history.scrollRestoration = \"manual\"); // otherwise the new position will get overwritten by the browser onload.\n\n      var isNormalizing = _normalizer && _normalizer.isPressed;\n      value = cachingFunc.v = Math.round(value) || (_normalizer && _normalizer.iOS ? 1 : 0); //TODO: iOS Bug: if you allow it to go to 0, Safari can start to report super strange (wildly inaccurate) touch positions!\n\n      f(value);\n      cachingFunc.cacheID = _scrollers.cache;\n      isNormalizing && _bridge(\"ss\", value); // set scroll (notify ScrollTrigger so it can dispatch a \"scrollStart\" event if necessary\n    } else if (doNotCache || _scrollers.cache !== cachingFunc.cacheID || _bridge(\"ref\")) {\n      cachingFunc.cacheID = _scrollers.cache;\n      cachingFunc.v = f();\n    }\n\n    return cachingFunc.v + cachingFunc.offset;\n  };\n\n  cachingFunc.offset = 0;\n  return f && cachingFunc;\n},\n    _horizontal = {\n  s: _scrollLeft,\n  p: \"left\",\n  p2: \"Left\",\n  os: \"right\",\n  os2: \"Right\",\n  d: \"width\",\n  d2: \"Width\",\n  a: \"x\",\n  sc: _scrollCacheFunc(function (value) {\n    return arguments.length ? _win.scrollTo(value, _vertical.sc()) : _win.pageXOffset || _doc[_scrollLeft] || _docEl[_scrollLeft] || _body[_scrollLeft] || 0;\n  })\n},\n    _vertical = {\n  s: _scrollTop,\n  p: \"top\",\n  p2: \"Top\",\n  os: \"bottom\",\n  os2: \"Bottom\",\n  d: \"height\",\n  d2: \"Height\",\n  a: \"y\",\n  op: _horizontal,\n  sc: _scrollCacheFunc(function (value) {\n    return arguments.length ? _win.scrollTo(_horizontal.sc(), value) : _win.pageYOffset || _doc[_scrollTop] || _docEl[_scrollTop] || _body[_scrollTop] || 0;\n  })\n},\n    _getTarget = function _getTarget(t) {\n  return gsap.utils.toArray(t)[0] || (typeof t === \"string\" && gsap.config().nullTargetWarn !== false ? console.warn(\"Element not found:\", t) : null);\n},\n    _getScrollFunc = function _getScrollFunc(element, _ref) {\n  var s = _ref.s,\n      sc = _ref.sc; // we store the scroller functions in a alternating sequenced Array like [element, verticalScrollFunc, horizontalScrollFunc, ...] so that we can minimize memory, maximize performance, and we also record the last position as a \".rec\" property in order to revert to that after refreshing to ensure things don't shift around.\n\n  var i = _scrollers.indexOf(element),\n      offset = sc === _vertical.sc ? 1 : 2;\n\n  !~i && (i = _scrollers.push(element) - 1);\n  return _scrollers[i + offset] || (_scrollers[i + offset] = _scrollCacheFunc(_getProxyProp(element, s), true) || (_isViewport(element) ? sc : _scrollCacheFunc(function (value) {\n    return arguments.length ? element[s] = value : element[s];\n  })));\n},\n    _getVelocityProp = function _getVelocityProp(value, minTimeRefresh, useDelta) {\n  var v1 = value,\n      v2 = value,\n      t1 = _getTime(),\n      t2 = t1,\n      min = minTimeRefresh || 50,\n      dropToZeroTime = Math.max(500, min * 3),\n      update = function update(value, force) {\n    var t = _getTime();\n\n    if (force || t - t1 > min) {\n      v2 = v1;\n      v1 = value;\n      t2 = t1;\n      t1 = t;\n    } else if (useDelta) {\n      v1 += value;\n    } else {\n      // not totally necessary, but makes it a bit more accurate by adjusting the v1 value according to the new slope. This way we're not just ignoring the incoming data. Removing for now because it doesn't seem to make much practical difference and it's probably not worth the kb.\n      v1 = v2 + (value - v2) / (t - t2) * (t1 - t2);\n    }\n  },\n      reset = function reset() {\n    v2 = v1 = useDelta ? 0 : v1;\n    t2 = t1 = 0;\n  },\n      getVelocity = function getVelocity(latestValue) {\n    var tOld = t2,\n        vOld = v2,\n        t = _getTime();\n\n    (latestValue || latestValue === 0) && latestValue !== v1 && update(latestValue);\n    return t1 === t2 || t - t2 > dropToZeroTime ? 0 : (v1 + (useDelta ? vOld : -vOld)) / ((useDelta ? t : t1) - tOld) * 1000;\n  };\n\n  return {\n    update: update,\n    reset: reset,\n    getVelocity: getVelocity\n  };\n},\n    _getEvent = function _getEvent(e, preventDefault) {\n  preventDefault && !e._gsapAllow && e.preventDefault();\n  return e.changedTouches ? e.changedTouches[0] : e;\n},\n    _getAbsoluteMax = function _getAbsoluteMax(a) {\n  var max = Math.max.apply(Math, a),\n      min = Math.min.apply(Math, a);\n  return Math.abs(max) >= Math.abs(min) ? max : min;\n},\n    _setScrollTrigger = function _setScrollTrigger() {\n  ScrollTrigger = gsap.core.globals().ScrollTrigger;\n  ScrollTrigger && ScrollTrigger.core && _integrate();\n},\n    _initCore = function _initCore(core) {\n  gsap = core || _getGSAP();\n\n  if (gsap && typeof document !== \"undefined\" && document.body) {\n    _win = window;\n    _doc = document;\n    _docEl = _doc.documentElement;\n    _body = _doc.body;\n    _root = [_win, _doc, _docEl, _body];\n    _clamp = gsap.utils.clamp;\n    _pointerType = \"onpointerenter\" in _body ? \"pointer\" : \"mouse\"; // isTouch is 0 if no touch, 1 if ONLY touch, and 2 if it can accommodate touch but also other types like mouse/pointer.\n\n    _isTouch = Observer.isTouch = _win.matchMedia && _win.matchMedia(\"(hover: none), (pointer: coarse)\").matches ? 1 : \"ontouchstart\" in _win || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0 ? 2 : 0;\n    _eventTypes = Observer.eventTypes = (\"ontouchstart\" in _docEl ? \"touchstart,touchmove,touchcancel,touchend\" : !(\"onpointerdown\" in _docEl) ? \"mousedown,mousemove,mouseup,mouseup\" : \"pointerdown,pointermove,pointercancel,pointerup\").split(\",\");\n    setTimeout(function () {\n      return _startup = 0;\n    }, 500);\n\n    _setScrollTrigger();\n\n    _coreInitted = 1;\n  }\n\n  return _coreInitted;\n};\n\n_horizontal.op = _vertical;\n_scrollers.cache = 0;\nexport var Observer = /*#__PURE__*/function () {\n  function Observer(vars) {\n    this.init(vars);\n  }\n\n  var _proto = Observer.prototype;\n\n  _proto.init = function init(vars) {\n    _coreInitted || _initCore(gsap) || console.warn(\"Please gsap.registerPlugin(Observer)\");\n    ScrollTrigger || _setScrollTrigger();\n    var tolerance = vars.tolerance,\n        dragMinimum = vars.dragMinimum,\n        type = vars.type,\n        target = vars.target,\n        lineHeight = vars.lineHeight,\n        debounce = vars.debounce,\n        preventDefault = vars.preventDefault,\n        onStop = vars.onStop,\n        onStopDelay = vars.onStopDelay,\n        ignore = vars.ignore,\n        wheelSpeed = vars.wheelSpeed,\n        event = vars.event,\n        onDragStart = vars.onDragStart,\n        onDragEnd = vars.onDragEnd,\n        onDrag = vars.onDrag,\n        onPress = vars.onPress,\n        onRelease = vars.onRelease,\n        onRight = vars.onRight,\n        onLeft = vars.onLeft,\n        onUp = vars.onUp,\n        onDown = vars.onDown,\n        onChangeX = vars.onChangeX,\n        onChangeY = vars.onChangeY,\n        onChange = vars.onChange,\n        onToggleX = vars.onToggleX,\n        onToggleY = vars.onToggleY,\n        onHover = vars.onHover,\n        onHoverEnd = vars.onHoverEnd,\n        onMove = vars.onMove,\n        ignoreCheck = vars.ignoreCheck,\n        isNormalizer = vars.isNormalizer,\n        onGestureStart = vars.onGestureStart,\n        onGestureEnd = vars.onGestureEnd,\n        onWheel = vars.onWheel,\n        onEnable = vars.onEnable,\n        onDisable = vars.onDisable,\n        onClick = vars.onClick,\n        scrollSpeed = vars.scrollSpeed,\n        capture = vars.capture,\n        allowClicks = vars.allowClicks,\n        lockAxis = vars.lockAxis,\n        onLockAxis = vars.onLockAxis;\n    this.target = target = _getTarget(target) || _docEl;\n    this.vars = vars;\n    ignore && (ignore = gsap.utils.toArray(ignore));\n    tolerance = tolerance || 0;\n    dragMinimum = dragMinimum || 0;\n    wheelSpeed = wheelSpeed || 1;\n    scrollSpeed = scrollSpeed || 1;\n    type = type || \"wheel,touch,pointer\";\n    debounce = debounce !== false;\n    lineHeight || (lineHeight = parseFloat(_win.getComputedStyle(_body).lineHeight) || 22); // note: browser may report \"normal\", so default to 22.\n\n    var id,\n        onStopDelayedCall,\n        dragged,\n        moved,\n        wheeled,\n        locked,\n        axis,\n        self = this,\n        prevDeltaX = 0,\n        prevDeltaY = 0,\n        scrollFuncX = _getScrollFunc(target, _horizontal),\n        scrollFuncY = _getScrollFunc(target, _vertical),\n        scrollX = scrollFuncX(),\n        scrollY = scrollFuncY(),\n        limitToTouch = ~type.indexOf(\"touch\") && !~type.indexOf(\"pointer\") && _eventTypes[0] === \"pointerdown\",\n        // for devices that accommodate mouse events and touch events, we need to distinguish.\n    isViewport = _isViewport(target),\n        ownerDoc = target.ownerDocument || _doc,\n        deltaX = [0, 0, 0],\n        // wheel, scroll, pointer/touch\n    deltaY = [0, 0, 0],\n        onClickTime = 0,\n        clickCapture = function clickCapture() {\n      return onClickTime = _getTime();\n    },\n        _ignoreCheck = function _ignoreCheck(e, isPointerOrTouch) {\n      return (self.event = e) && ignore && ~ignore.indexOf(e.target) || isPointerOrTouch && limitToTouch && e.pointerType !== \"touch\" || ignoreCheck && ignoreCheck(e, isPointerOrTouch);\n    },\n        onStopFunc = function onStopFunc() {\n      self._vx.reset();\n\n      self._vy.reset();\n\n      onStopDelayedCall.pause();\n      onStop && onStop(self);\n    },\n        update = function update() {\n      var dx = self.deltaX = _getAbsoluteMax(deltaX),\n          dy = self.deltaY = _getAbsoluteMax(deltaY),\n          changedX = Math.abs(dx) >= tolerance,\n          changedY = Math.abs(dy) >= tolerance;\n\n      onChange && (changedX || changedY) && onChange(self, dx, dy, deltaX, deltaY); // in ScrollTrigger.normalizeScroll(), we need to know if it was touch/pointer so we need access to the deltaX/deltaY Arrays before we clear them out.\n\n      if (changedX) {\n        onRight && self.deltaX > 0 && onRight(self);\n        onLeft && self.deltaX < 0 && onLeft(self);\n        onChangeX && onChangeX(self);\n        onToggleX && self.deltaX < 0 !== prevDeltaX < 0 && onToggleX(self);\n        prevDeltaX = self.deltaX;\n        deltaX[0] = deltaX[1] = deltaX[2] = 0;\n      }\n\n      if (changedY) {\n        onDown && self.deltaY > 0 && onDown(self);\n        onUp && self.deltaY < 0 && onUp(self);\n        onChangeY && onChangeY(self);\n        onToggleY && self.deltaY < 0 !== prevDeltaY < 0 && onToggleY(self);\n        prevDeltaY = self.deltaY;\n        deltaY[0] = deltaY[1] = deltaY[2] = 0;\n      }\n\n      if (moved || dragged) {\n        onMove && onMove(self);\n        onLockAxis && locked && onLockAxis(self);\n\n        if (dragged) {\n          onDrag(self);\n          dragged = false;\n        }\n\n        moved = locked = false;\n      }\n\n      if (wheeled) {\n        onWheel(self);\n        wheeled = false;\n      }\n\n      id = 0;\n    },\n        onDelta = function onDelta(x, y, index) {\n      deltaX[index] += x;\n      deltaY[index] += y;\n\n      self._vx.update(x);\n\n      self._vy.update(y);\n\n      debounce ? id || (id = requestAnimationFrame(update)) : update();\n    },\n        onTouchOrPointerDelta = function onTouchOrPointerDelta(x, y) {\n      if (axis !== \"y\") {\n        deltaX[2] += x;\n\n        self._vx.update(x, true); // update the velocity as frequently as possible instead of in the debounced function so that very quick touch-scrolls (flicks) feel natural. If it's the mouse/touch/pointer, force it so that we get snappy/accurate momentum scroll.\n\n      }\n\n      if (axis !== \"x\") {\n        deltaY[2] += y;\n\n        self._vy.update(y, true);\n      }\n\n      if (lockAxis && !axis) {\n        self.axis = axis = Math.abs(x) > Math.abs(y) ? \"x\" : \"y\";\n        locked = true;\n      }\n\n      debounce ? id || (id = requestAnimationFrame(update)) : update();\n    },\n        _onDrag = function _onDrag(e) {\n      if (_ignoreCheck(e, 1)) {\n        return;\n      }\n\n      e = _getEvent(e, preventDefault);\n      var x = e.clientX,\n          y = e.clientY,\n          dx = x - self.x,\n          dy = y - self.y,\n          isDragging = self.isDragging;\n      self.x = x;\n      self.y = y;\n\n      if (isDragging || Math.abs(self.startX - x) >= dragMinimum || Math.abs(self.startY - y) >= dragMinimum) {\n        onDrag && (dragged = true);\n        isDragging || (self.isDragging = true);\n        onTouchOrPointerDelta(dx, dy);\n        isDragging || onDragStart && onDragStart(self);\n      }\n    },\n        _onPress = self.onPress = function (e) {\n      if (_ignoreCheck(e, 1)) {\n        return;\n      }\n\n      self.axis = axis = null;\n      onStopDelayedCall.pause();\n      self.isPressed = true;\n      e = _getEvent(e); // note: may need to preventDefault(?) Won't side-scroll on iOS Safari if we do, though.\n\n      prevDeltaX = prevDeltaY = 0;\n      self.startX = self.x = e.clientX;\n      self.startY = self.y = e.clientY;\n\n      self._vx.reset(); // otherwise the t2 may be stale if the user touches and flicks super fast and releases in less than 2 requestAnimationFrame ticks, causing velocity to be 0.\n\n\n      self._vy.reset();\n\n      _addListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, preventDefault, true);\n\n      self.deltaX = self.deltaY = 0;\n      onPress && onPress(self);\n    },\n        _onRelease = function _onRelease(e) {\n      if (_ignoreCheck(e, 1)) {\n        return;\n      }\n\n      _removeListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, true);\n\n      var wasDragging = self.isDragging && (Math.abs(self.x - self.startX) > 3 || Math.abs(self.y - self.startY) > 3),\n          // some touch devices need some wiggle room in terms of sensing clicks - the finger may move a few pixels.\n      eventData = _getEvent(e);\n\n      if (!wasDragging) {\n        self._vx.reset();\n\n        self._vy.reset();\n\n        if (preventDefault && allowClicks) {\n          gsap.delayedCall(0.08, function () {\n            // some browsers (like Firefox) won't trust script-generated clicks, so if the user tries to click on a video to play it, for example, it simply won't work. Since a regular \"click\" event will most likely be generated anyway (one that has its isTrusted flag set to true), we must slightly delay our script-generated click so that the \"real\"/trusted one is prioritized. Remember, when there are duplicate events in quick succession, we suppress all but the first one. Some browsers don't even trigger the \"real\" one at all, so our synthetic one is a safety valve that ensures that no matter what, a click event does get dispatched.\n            if (_getTime() - onClickTime > 300 && !e.defaultPrevented) {\n              if (e.target.click) {\n                //some browsers (like mobile Safari) don't properly trigger the click event\n                e.target.click();\n              } else if (ownerDoc.createEvent) {\n                var syntheticEvent = ownerDoc.createEvent(\"MouseEvents\");\n                syntheticEvent.initMouseEvent(\"click\", true, true, _win, 1, eventData.screenX, eventData.screenY, eventData.clientX, eventData.clientY, false, false, false, false, 0, null);\n                e.target.dispatchEvent(syntheticEvent);\n              }\n            }\n          });\n        }\n      }\n\n      self.isDragging = self.isGesturing = self.isPressed = false;\n      onStop && !isNormalizer && onStopDelayedCall.restart(true);\n      onDragEnd && wasDragging && onDragEnd(self);\n      onRelease && onRelease(self, wasDragging);\n    },\n        _onGestureStart = function _onGestureStart(e) {\n      return e.touches && e.touches.length > 1 && (self.isGesturing = true) && onGestureStart(e, self.isDragging);\n    },\n        _onGestureEnd = function _onGestureEnd() {\n      return (self.isGesturing = false) || onGestureEnd(self);\n    },\n        onScroll = function onScroll(e) {\n      if (_ignoreCheck(e)) {\n        return;\n      }\n\n      var x = scrollFuncX(),\n          y = scrollFuncY();\n      onDelta((x - scrollX) * scrollSpeed, (y - scrollY) * scrollSpeed, 1);\n      scrollX = x;\n      scrollY = y;\n      onStop && onStopDelayedCall.restart(true);\n    },\n        _onWheel = function _onWheel(e) {\n      if (_ignoreCheck(e)) {\n        return;\n      }\n\n      e = _getEvent(e, preventDefault);\n      onWheel && (wheeled = true);\n      var multiplier = (e.deltaMode === 1 ? lineHeight : e.deltaMode === 2 ? _win.innerHeight : 1) * wheelSpeed;\n      onDelta(e.deltaX * multiplier, e.deltaY * multiplier, 0);\n      onStop && !isNormalizer && onStopDelayedCall.restart(true);\n    },\n        _onMove = function _onMove(e) {\n      if (_ignoreCheck(e)) {\n        return;\n      }\n\n      var x = e.clientX,\n          y = e.clientY,\n          dx = x - self.x,\n          dy = y - self.y;\n      self.x = x;\n      self.y = y;\n      moved = true;\n      (dx || dy) && onTouchOrPointerDelta(dx, dy);\n    },\n        _onHover = function _onHover(e) {\n      self.event = e;\n      onHover(self);\n    },\n        _onHoverEnd = function _onHoverEnd(e) {\n      self.event = e;\n      onHoverEnd(self);\n    },\n        _onClick = function _onClick(e) {\n      return _ignoreCheck(e) || _getEvent(e, preventDefault) && onClick(self);\n    };\n\n    onStopDelayedCall = self._dc = gsap.delayedCall(onStopDelay || 0.25, onStopFunc).pause();\n    self.deltaX = self.deltaY = 0;\n    self._vx = _getVelocityProp(0, 50, true);\n    self._vy = _getVelocityProp(0, 50, true);\n    self.scrollX = scrollFuncX;\n    self.scrollY = scrollFuncY;\n    self.isDragging = self.isGesturing = self.isPressed = false;\n\n    self.enable = function (e) {\n      if (!self.isEnabled) {\n        _addListener(isViewport ? ownerDoc : target, \"scroll\", _onScroll);\n\n        type.indexOf(\"scroll\") >= 0 && _addListener(isViewport ? ownerDoc : target, \"scroll\", onScroll, preventDefault, capture);\n        type.indexOf(\"wheel\") >= 0 && _addListener(target, \"wheel\", _onWheel, preventDefault, capture);\n\n        if (type.indexOf(\"touch\") >= 0 && _isTouch || type.indexOf(\"pointer\") >= 0) {\n          _addListener(target, _eventTypes[0], _onPress, preventDefault, capture);\n\n          _addListener(ownerDoc, _eventTypes[2], _onRelease);\n\n          _addListener(ownerDoc, _eventTypes[3], _onRelease);\n\n          allowClicks && _addListener(target, \"click\", clickCapture, false, true);\n          onClick && _addListener(target, \"click\", _onClick);\n          onGestureStart && _addListener(ownerDoc, \"gesturestart\", _onGestureStart);\n          onGestureEnd && _addListener(ownerDoc, \"gestureend\", _onGestureEnd);\n          onHover && _addListener(target, _pointerType + \"enter\", _onHover);\n          onHoverEnd && _addListener(target, _pointerType + \"leave\", _onHoverEnd);\n          onMove && _addListener(target, _pointerType + \"move\", _onMove);\n        }\n\n        self.isEnabled = true;\n        e && e.type && _onPress(e);\n        onEnable && onEnable(self);\n      }\n\n      return self;\n    };\n\n    self.disable = function () {\n      if (self.isEnabled) {\n        // only remove the _onScroll listener if there aren't any others that rely on the functionality.\n        _observers.filter(function (o) {\n          return o !== self && _isViewport(o.target);\n        }).length || _removeListener(isViewport ? ownerDoc : target, \"scroll\", _onScroll);\n\n        if (self.isPressed) {\n          self._vx.reset();\n\n          self._vy.reset();\n\n          _removeListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, true);\n        }\n\n        _removeListener(isViewport ? ownerDoc : target, \"scroll\", onScroll, capture);\n\n        _removeListener(target, \"wheel\", _onWheel, capture);\n\n        _removeListener(target, _eventTypes[0], _onPress, capture);\n\n        _removeListener(ownerDoc, _eventTypes[2], _onRelease);\n\n        _removeListener(ownerDoc, _eventTypes[3], _onRelease);\n\n        _removeListener(target, \"click\", clickCapture, true);\n\n        _removeListener(target, \"click\", _onClick);\n\n        _removeListener(ownerDoc, \"gesturestart\", _onGestureStart);\n\n        _removeListener(ownerDoc, \"gestureend\", _onGestureEnd);\n\n        _removeListener(target, _pointerType + \"enter\", _onHover);\n\n        _removeListener(target, _pointerType + \"leave\", _onHoverEnd);\n\n        _removeListener(target, _pointerType + \"move\", _onMove);\n\n        self.isEnabled = self.isPressed = self.isDragging = false;\n        onDisable && onDisable(self);\n      }\n    };\n\n    self.kill = function () {\n      self.disable();\n\n      var i = _observers.indexOf(self);\n\n      i >= 0 && _observers.splice(i, 1);\n      _normalizer === self && (_normalizer = 0);\n    };\n\n    _observers.push(self);\n\n    isNormalizer && _isViewport(target) && (_normalizer = self);\n    self.enable(event);\n  };\n\n  _createClass(Observer, [{\n    key: \"velocityX\",\n    get: function get() {\n      return this._vx.getVelocity();\n    }\n  }, {\n    key: \"velocityY\",\n    get: function get() {\n      return this._vy.getVelocity();\n    }\n  }]);\n\n  return Observer;\n}();\nObserver.version = \"3.10.4\";\n\nObserver.create = function (vars) {\n  return new Observer(vars);\n};\n\nObserver.register = _initCore;\n\nObserver.getAll = function () {\n  return _observers.slice();\n};\n\nObserver.getById = function (id) {\n  return _observers.filter(function (o) {\n    return o.vars.id === id;\n  })[0];\n};\n\n_getGSAP() && gsap.registerPlugin(Observer);\nexport { Observer as default, _isViewport, _scrollers, _getScrollFunc, _getProxyProp, _proxies, _getVelocityProp, _vertical, _horizontal, _getTarget };","map":{"version":3,"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","gsap","_coreInitted","_clamp","_win","_doc","_docEl","_body","_isTouch","_pointerType","ScrollTrigger","_root","_normalizer","_eventTypes","_getGSAP","window","registerPlugin","_passThrough","p","_startup","_observers","_scrollers","_proxies","_getTime","Date","now","_bridge","name","value","_integrate","core","data","bridge","scrollers","proxies","push","apply","_getProxyProp","element","property","indexOf","_isViewport","el","_addListener","type","func","nonPassive","capture","addEventListener","passive","_removeListener","removeEventListener","_scrollLeft","_scrollTop","_onScroll","isPressed","cache","_scrollCacheFunc","f","doNotCache","cachingFunc","history","scrollRestoration","isNormalizing","v","Math","round","iOS","cacheID","offset","_horizontal","s","p2","os","os2","d","d2","a","sc","arguments","scrollTo","_vertical","pageXOffset","op","pageYOffset","_getTarget","t","utils","toArray","config","nullTargetWarn","console","warn","_getScrollFunc","_ref","_getVelocityProp","minTimeRefresh","useDelta","v1","v2","t1","t2","min","dropToZeroTime","max","update","force","reset","getVelocity","latestValue","tOld","vOld","_getEvent","e","preventDefault","_gsapAllow","changedTouches","_getAbsoluteMax","abs","_setScrollTrigger","globals","_initCore","document","body","documentElement","clamp","Observer","isTouch","matchMedia","matches","navigator","maxTouchPoints","msMaxTouchPoints","eventTypes","split","setTimeout","vars","init","_proto","tolerance","dragMinimum","lineHeight","debounce","onStop","onStopDelay","ignore","wheelSpeed","event","onDragStart","onDragEnd","onDrag","onPress","onRelease","onRight","onLeft","onUp","onDown","onChangeX","onChangeY","onChange","onToggleX","onToggleY","onHover","onHoverEnd","onMove","ignoreCheck","isNormalizer","onGestureStart","onGestureEnd","onWheel","onEnable","onDisable","onClick","scrollSpeed","allowClicks","lockAxis","onLockAxis","parseFloat","getComputedStyle","id","onStopDelayedCall","dragged","moved","wheeled","locked","axis","self","prevDeltaX","prevDeltaY","scrollFuncX","scrollFuncY","scrollX","scrollY","limitToTouch","isViewport","ownerDoc","ownerDocument","deltaX","deltaY","onClickTime","clickCapture","_ignoreCheck","isPointerOrTouch","pointerType","onStopFunc","_vx","_vy","pause","dx","dy","changedX","changedY","onDelta","x","y","index","requestAnimationFrame","onTouchOrPointerDelta","_onDrag","clientX","clientY","isDragging","startX","startY","_onPress","_onRelease","wasDragging","eventData","delayedCall","defaultPrevented","click","createEvent","syntheticEvent","initMouseEvent","screenX","screenY","dispatchEvent","isGesturing","restart","_onGestureStart","touches","_onGestureEnd","onScroll","_onWheel","multiplier","deltaMode","innerHeight","_onMove","_onHover","_onHoverEnd","_onClick","_dc","enable","isEnabled","disable","filter","o","kill","splice","get","version","create","register","getAll","slice","getById","default"],"sources":["/Users/gerardojballesteros/Documents/Proyectos Web/Marsmellow/marsmellow-app/node_modules/gsap/Observer.js"],"sourcesContent":["function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*!\n * Observer 3.10.4\n * https://greensock.com\n *\n * @license Copyright 2008-2022, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar gsap,\n    _coreInitted,\n    _clamp,\n    _win,\n    _doc,\n    _docEl,\n    _body,\n    _isTouch,\n    _pointerType,\n    ScrollTrigger,\n    _root,\n    _normalizer,\n    _eventTypes,\n    _getGSAP = function _getGSAP() {\n  return gsap || typeof window !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n},\n    _passThrough = function _passThrough(p) {\n  return p;\n},\n    _startup = 1,\n    _observers = [],\n    _scrollers = [],\n    _proxies = [],\n    _getTime = Date.now,\n    _bridge = function _bridge(name, value) {\n  return value;\n},\n    _integrate = function _integrate() {\n  var core = ScrollTrigger.core,\n      data = core.bridge || {},\n      scrollers = core._scrollers,\n      proxies = core._proxies;\n  scrollers.push.apply(scrollers, _scrollers);\n  proxies.push.apply(proxies, _proxies);\n  _scrollers = scrollers;\n  _proxies = proxies;\n\n  _bridge = function _bridge(name, value) {\n    return data[name](value);\n  };\n},\n    _getProxyProp = function _getProxyProp(element, property) {\n  return ~_proxies.indexOf(element) && _proxies[_proxies.indexOf(element) + 1][property];\n},\n    _isViewport = function _isViewport(el) {\n  return !!~_root.indexOf(el);\n},\n    _addListener = function _addListener(element, type, func, nonPassive, capture) {\n  return element.addEventListener(type, func, {\n    passive: !nonPassive,\n    capture: !!capture\n  });\n},\n    _removeListener = function _removeListener(element, type, func, capture) {\n  return element.removeEventListener(type, func, !!capture);\n},\n    _scrollLeft = \"scrollLeft\",\n    _scrollTop = \"scrollTop\",\n    _onScroll = function _onScroll() {\n  return _normalizer && _normalizer.isPressed || _scrollers.cache++;\n},\n    _scrollCacheFunc = function _scrollCacheFunc(f, doNotCache) {\n  var cachingFunc = function cachingFunc(value) {\n    // since reading the scrollTop/scrollLeft/pageOffsetY/pageOffsetX can trigger a layout, this function allows us to cache the value so it only gets read fresh after a \"scroll\" event fires (or while we're refreshing because that can lengthen the page and alter the scroll position). when \"soft\" is true, that means don't actually set the scroll, but cache the new value instead (useful in ScrollSmoother)\n    if (value || value === 0) {\n      _startup && (_win.history.scrollRestoration = \"manual\"); // otherwise the new position will get overwritten by the browser onload.\n\n      var isNormalizing = _normalizer && _normalizer.isPressed;\n      value = cachingFunc.v = Math.round(value) || (_normalizer && _normalizer.iOS ? 1 : 0); //TODO: iOS Bug: if you allow it to go to 0, Safari can start to report super strange (wildly inaccurate) touch positions!\n\n      f(value);\n      cachingFunc.cacheID = _scrollers.cache;\n      isNormalizing && _bridge(\"ss\", value); // set scroll (notify ScrollTrigger so it can dispatch a \"scrollStart\" event if necessary\n    } else if (doNotCache || _scrollers.cache !== cachingFunc.cacheID || _bridge(\"ref\")) {\n      cachingFunc.cacheID = _scrollers.cache;\n      cachingFunc.v = f();\n    }\n\n    return cachingFunc.v + cachingFunc.offset;\n  };\n\n  cachingFunc.offset = 0;\n  return f && cachingFunc;\n},\n    _horizontal = {\n  s: _scrollLeft,\n  p: \"left\",\n  p2: \"Left\",\n  os: \"right\",\n  os2: \"Right\",\n  d: \"width\",\n  d2: \"Width\",\n  a: \"x\",\n  sc: _scrollCacheFunc(function (value) {\n    return arguments.length ? _win.scrollTo(value, _vertical.sc()) : _win.pageXOffset || _doc[_scrollLeft] || _docEl[_scrollLeft] || _body[_scrollLeft] || 0;\n  })\n},\n    _vertical = {\n  s: _scrollTop,\n  p: \"top\",\n  p2: \"Top\",\n  os: \"bottom\",\n  os2: \"Bottom\",\n  d: \"height\",\n  d2: \"Height\",\n  a: \"y\",\n  op: _horizontal,\n  sc: _scrollCacheFunc(function (value) {\n    return arguments.length ? _win.scrollTo(_horizontal.sc(), value) : _win.pageYOffset || _doc[_scrollTop] || _docEl[_scrollTop] || _body[_scrollTop] || 0;\n  })\n},\n    _getTarget = function _getTarget(t) {\n  return gsap.utils.toArray(t)[0] || (typeof t === \"string\" && gsap.config().nullTargetWarn !== false ? console.warn(\"Element not found:\", t) : null);\n},\n    _getScrollFunc = function _getScrollFunc(element, _ref) {\n  var s = _ref.s,\n      sc = _ref.sc;\n\n  // we store the scroller functions in a alternating sequenced Array like [element, verticalScrollFunc, horizontalScrollFunc, ...] so that we can minimize memory, maximize performance, and we also record the last position as a \".rec\" property in order to revert to that after refreshing to ensure things don't shift around.\n  var i = _scrollers.indexOf(element),\n      offset = sc === _vertical.sc ? 1 : 2;\n\n  !~i && (i = _scrollers.push(element) - 1);\n  return _scrollers[i + offset] || (_scrollers[i + offset] = _scrollCacheFunc(_getProxyProp(element, s), true) || (_isViewport(element) ? sc : _scrollCacheFunc(function (value) {\n    return arguments.length ? element[s] = value : element[s];\n  })));\n},\n    _getVelocityProp = function _getVelocityProp(value, minTimeRefresh, useDelta) {\n  var v1 = value,\n      v2 = value,\n      t1 = _getTime(),\n      t2 = t1,\n      min = minTimeRefresh || 50,\n      dropToZeroTime = Math.max(500, min * 3),\n      update = function update(value, force) {\n    var t = _getTime();\n\n    if (force || t - t1 > min) {\n      v2 = v1;\n      v1 = value;\n      t2 = t1;\n      t1 = t;\n    } else if (useDelta) {\n      v1 += value;\n    } else {\n      // not totally necessary, but makes it a bit more accurate by adjusting the v1 value according to the new slope. This way we're not just ignoring the incoming data. Removing for now because it doesn't seem to make much practical difference and it's probably not worth the kb.\n      v1 = v2 + (value - v2) / (t - t2) * (t1 - t2);\n    }\n  },\n      reset = function reset() {\n    v2 = v1 = useDelta ? 0 : v1;\n    t2 = t1 = 0;\n  },\n      getVelocity = function getVelocity(latestValue) {\n    var tOld = t2,\n        vOld = v2,\n        t = _getTime();\n\n    (latestValue || latestValue === 0) && latestValue !== v1 && update(latestValue);\n    return t1 === t2 || t - t2 > dropToZeroTime ? 0 : (v1 + (useDelta ? vOld : -vOld)) / ((useDelta ? t : t1) - tOld) * 1000;\n  };\n\n  return {\n    update: update,\n    reset: reset,\n    getVelocity: getVelocity\n  };\n},\n    _getEvent = function _getEvent(e, preventDefault) {\n  preventDefault && !e._gsapAllow && e.preventDefault();\n  return e.changedTouches ? e.changedTouches[0] : e;\n},\n    _getAbsoluteMax = function _getAbsoluteMax(a) {\n  var max = Math.max.apply(Math, a),\n      min = Math.min.apply(Math, a);\n  return Math.abs(max) >= Math.abs(min) ? max : min;\n},\n    _setScrollTrigger = function _setScrollTrigger() {\n  ScrollTrigger = gsap.core.globals().ScrollTrigger;\n  ScrollTrigger && ScrollTrigger.core && _integrate();\n},\n    _initCore = function _initCore(core) {\n  gsap = core || _getGSAP();\n\n  if (gsap && typeof document !== \"undefined\" && document.body) {\n    _win = window;\n    _doc = document;\n    _docEl = _doc.documentElement;\n    _body = _doc.body;\n    _root = [_win, _doc, _docEl, _body];\n    _clamp = gsap.utils.clamp;\n    _pointerType = \"onpointerenter\" in _body ? \"pointer\" : \"mouse\"; // isTouch is 0 if no touch, 1 if ONLY touch, and 2 if it can accommodate touch but also other types like mouse/pointer.\n\n    _isTouch = Observer.isTouch = _win.matchMedia && _win.matchMedia(\"(hover: none), (pointer: coarse)\").matches ? 1 : \"ontouchstart\" in _win || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0 ? 2 : 0;\n    _eventTypes = Observer.eventTypes = (\"ontouchstart\" in _docEl ? \"touchstart,touchmove,touchcancel,touchend\" : !(\"onpointerdown\" in _docEl) ? \"mousedown,mousemove,mouseup,mouseup\" : \"pointerdown,pointermove,pointercancel,pointerup\").split(\",\");\n    setTimeout(function () {\n      return _startup = 0;\n    }, 500);\n\n    _setScrollTrigger();\n\n    _coreInitted = 1;\n  }\n\n  return _coreInitted;\n};\n\n_horizontal.op = _vertical;\n_scrollers.cache = 0;\nexport var Observer = /*#__PURE__*/function () {\n  function Observer(vars) {\n    this.init(vars);\n  }\n\n  var _proto = Observer.prototype;\n\n  _proto.init = function init(vars) {\n    _coreInitted || _initCore(gsap) || console.warn(\"Please gsap.registerPlugin(Observer)\");\n    ScrollTrigger || _setScrollTrigger();\n    var tolerance = vars.tolerance,\n        dragMinimum = vars.dragMinimum,\n        type = vars.type,\n        target = vars.target,\n        lineHeight = vars.lineHeight,\n        debounce = vars.debounce,\n        preventDefault = vars.preventDefault,\n        onStop = vars.onStop,\n        onStopDelay = vars.onStopDelay,\n        ignore = vars.ignore,\n        wheelSpeed = vars.wheelSpeed,\n        event = vars.event,\n        onDragStart = vars.onDragStart,\n        onDragEnd = vars.onDragEnd,\n        onDrag = vars.onDrag,\n        onPress = vars.onPress,\n        onRelease = vars.onRelease,\n        onRight = vars.onRight,\n        onLeft = vars.onLeft,\n        onUp = vars.onUp,\n        onDown = vars.onDown,\n        onChangeX = vars.onChangeX,\n        onChangeY = vars.onChangeY,\n        onChange = vars.onChange,\n        onToggleX = vars.onToggleX,\n        onToggleY = vars.onToggleY,\n        onHover = vars.onHover,\n        onHoverEnd = vars.onHoverEnd,\n        onMove = vars.onMove,\n        ignoreCheck = vars.ignoreCheck,\n        isNormalizer = vars.isNormalizer,\n        onGestureStart = vars.onGestureStart,\n        onGestureEnd = vars.onGestureEnd,\n        onWheel = vars.onWheel,\n        onEnable = vars.onEnable,\n        onDisable = vars.onDisable,\n        onClick = vars.onClick,\n        scrollSpeed = vars.scrollSpeed,\n        capture = vars.capture,\n        allowClicks = vars.allowClicks,\n        lockAxis = vars.lockAxis,\n        onLockAxis = vars.onLockAxis;\n    this.target = target = _getTarget(target) || _docEl;\n    this.vars = vars;\n    ignore && (ignore = gsap.utils.toArray(ignore));\n    tolerance = tolerance || 0;\n    dragMinimum = dragMinimum || 0;\n    wheelSpeed = wheelSpeed || 1;\n    scrollSpeed = scrollSpeed || 1;\n    type = type || \"wheel,touch,pointer\";\n    debounce = debounce !== false;\n    lineHeight || (lineHeight = parseFloat(_win.getComputedStyle(_body).lineHeight) || 22); // note: browser may report \"normal\", so default to 22.\n\n    var id,\n        onStopDelayedCall,\n        dragged,\n        moved,\n        wheeled,\n        locked,\n        axis,\n        self = this,\n        prevDeltaX = 0,\n        prevDeltaY = 0,\n        scrollFuncX = _getScrollFunc(target, _horizontal),\n        scrollFuncY = _getScrollFunc(target, _vertical),\n        scrollX = scrollFuncX(),\n        scrollY = scrollFuncY(),\n        limitToTouch = ~type.indexOf(\"touch\") && !~type.indexOf(\"pointer\") && _eventTypes[0] === \"pointerdown\",\n        // for devices that accommodate mouse events and touch events, we need to distinguish.\n    isViewport = _isViewport(target),\n        ownerDoc = target.ownerDocument || _doc,\n        deltaX = [0, 0, 0],\n        // wheel, scroll, pointer/touch\n    deltaY = [0, 0, 0],\n        onClickTime = 0,\n        clickCapture = function clickCapture() {\n      return onClickTime = _getTime();\n    },\n        _ignoreCheck = function _ignoreCheck(e, isPointerOrTouch) {\n      return (self.event = e) && ignore && ~ignore.indexOf(e.target) || isPointerOrTouch && limitToTouch && e.pointerType !== \"touch\" || ignoreCheck && ignoreCheck(e, isPointerOrTouch);\n    },\n        onStopFunc = function onStopFunc() {\n      self._vx.reset();\n\n      self._vy.reset();\n\n      onStopDelayedCall.pause();\n      onStop && onStop(self);\n    },\n        update = function update() {\n      var dx = self.deltaX = _getAbsoluteMax(deltaX),\n          dy = self.deltaY = _getAbsoluteMax(deltaY),\n          changedX = Math.abs(dx) >= tolerance,\n          changedY = Math.abs(dy) >= tolerance;\n\n      onChange && (changedX || changedY) && onChange(self, dx, dy, deltaX, deltaY); // in ScrollTrigger.normalizeScroll(), we need to know if it was touch/pointer so we need access to the deltaX/deltaY Arrays before we clear them out.\n\n      if (changedX) {\n        onRight && self.deltaX > 0 && onRight(self);\n        onLeft && self.deltaX < 0 && onLeft(self);\n        onChangeX && onChangeX(self);\n        onToggleX && self.deltaX < 0 !== prevDeltaX < 0 && onToggleX(self);\n        prevDeltaX = self.deltaX;\n        deltaX[0] = deltaX[1] = deltaX[2] = 0;\n      }\n\n      if (changedY) {\n        onDown && self.deltaY > 0 && onDown(self);\n        onUp && self.deltaY < 0 && onUp(self);\n        onChangeY && onChangeY(self);\n        onToggleY && self.deltaY < 0 !== prevDeltaY < 0 && onToggleY(self);\n        prevDeltaY = self.deltaY;\n        deltaY[0] = deltaY[1] = deltaY[2] = 0;\n      }\n\n      if (moved || dragged) {\n        onMove && onMove(self);\n        onLockAxis && locked && onLockAxis(self);\n\n        if (dragged) {\n          onDrag(self);\n          dragged = false;\n        }\n\n        moved = locked = false;\n      }\n\n      if (wheeled) {\n        onWheel(self);\n        wheeled = false;\n      }\n\n      id = 0;\n    },\n        onDelta = function onDelta(x, y, index) {\n      deltaX[index] += x;\n      deltaY[index] += y;\n\n      self._vx.update(x);\n\n      self._vy.update(y);\n\n      debounce ? id || (id = requestAnimationFrame(update)) : update();\n    },\n        onTouchOrPointerDelta = function onTouchOrPointerDelta(x, y) {\n      if (axis !== \"y\") {\n        deltaX[2] += x;\n\n        self._vx.update(x, true); // update the velocity as frequently as possible instead of in the debounced function so that very quick touch-scrolls (flicks) feel natural. If it's the mouse/touch/pointer, force it so that we get snappy/accurate momentum scroll.\n\n      }\n\n      if (axis !== \"x\") {\n        deltaY[2] += y;\n\n        self._vy.update(y, true);\n      }\n\n      if (lockAxis && !axis) {\n        self.axis = axis = Math.abs(x) > Math.abs(y) ? \"x\" : \"y\";\n        locked = true;\n      }\n\n      debounce ? id || (id = requestAnimationFrame(update)) : update();\n    },\n        _onDrag = function _onDrag(e) {\n      if (_ignoreCheck(e, 1)) {\n        return;\n      }\n\n      e = _getEvent(e, preventDefault);\n      var x = e.clientX,\n          y = e.clientY,\n          dx = x - self.x,\n          dy = y - self.y,\n          isDragging = self.isDragging;\n      self.x = x;\n      self.y = y;\n\n      if (isDragging || Math.abs(self.startX - x) >= dragMinimum || Math.abs(self.startY - y) >= dragMinimum) {\n        onDrag && (dragged = true);\n        isDragging || (self.isDragging = true);\n        onTouchOrPointerDelta(dx, dy);\n        isDragging || onDragStart && onDragStart(self);\n      }\n    },\n        _onPress = self.onPress = function (e) {\n      if (_ignoreCheck(e, 1)) {\n        return;\n      }\n\n      self.axis = axis = null;\n      onStopDelayedCall.pause();\n      self.isPressed = true;\n      e = _getEvent(e); // note: may need to preventDefault(?) Won't side-scroll on iOS Safari if we do, though.\n\n      prevDeltaX = prevDeltaY = 0;\n      self.startX = self.x = e.clientX;\n      self.startY = self.y = e.clientY;\n\n      self._vx.reset(); // otherwise the t2 may be stale if the user touches and flicks super fast and releases in less than 2 requestAnimationFrame ticks, causing velocity to be 0.\n\n\n      self._vy.reset();\n\n      _addListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, preventDefault, true);\n\n      self.deltaX = self.deltaY = 0;\n      onPress && onPress(self);\n    },\n        _onRelease = function _onRelease(e) {\n      if (_ignoreCheck(e, 1)) {\n        return;\n      }\n\n      _removeListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, true);\n\n      var wasDragging = self.isDragging && (Math.abs(self.x - self.startX) > 3 || Math.abs(self.y - self.startY) > 3),\n          // some touch devices need some wiggle room in terms of sensing clicks - the finger may move a few pixels.\n      eventData = _getEvent(e);\n\n      if (!wasDragging) {\n        self._vx.reset();\n\n        self._vy.reset();\n\n        if (preventDefault && allowClicks) {\n          gsap.delayedCall(0.08, function () {\n            // some browsers (like Firefox) won't trust script-generated clicks, so if the user tries to click on a video to play it, for example, it simply won't work. Since a regular \"click\" event will most likely be generated anyway (one that has its isTrusted flag set to true), we must slightly delay our script-generated click so that the \"real\"/trusted one is prioritized. Remember, when there are duplicate events in quick succession, we suppress all but the first one. Some browsers don't even trigger the \"real\" one at all, so our synthetic one is a safety valve that ensures that no matter what, a click event does get dispatched.\n            if (_getTime() - onClickTime > 300 && !e.defaultPrevented) {\n              if (e.target.click) {\n                //some browsers (like mobile Safari) don't properly trigger the click event\n                e.target.click();\n              } else if (ownerDoc.createEvent) {\n                var syntheticEvent = ownerDoc.createEvent(\"MouseEvents\");\n                syntheticEvent.initMouseEvent(\"click\", true, true, _win, 1, eventData.screenX, eventData.screenY, eventData.clientX, eventData.clientY, false, false, false, false, 0, null);\n                e.target.dispatchEvent(syntheticEvent);\n              }\n            }\n          });\n        }\n      }\n\n      self.isDragging = self.isGesturing = self.isPressed = false;\n      onStop && !isNormalizer && onStopDelayedCall.restart(true);\n      onDragEnd && wasDragging && onDragEnd(self);\n      onRelease && onRelease(self, wasDragging);\n    },\n        _onGestureStart = function _onGestureStart(e) {\n      return e.touches && e.touches.length > 1 && (self.isGesturing = true) && onGestureStart(e, self.isDragging);\n    },\n        _onGestureEnd = function _onGestureEnd() {\n      return (self.isGesturing = false) || onGestureEnd(self);\n    },\n        onScroll = function onScroll(e) {\n      if (_ignoreCheck(e)) {\n        return;\n      }\n\n      var x = scrollFuncX(),\n          y = scrollFuncY();\n      onDelta((x - scrollX) * scrollSpeed, (y - scrollY) * scrollSpeed, 1);\n      scrollX = x;\n      scrollY = y;\n      onStop && onStopDelayedCall.restart(true);\n    },\n        _onWheel = function _onWheel(e) {\n      if (_ignoreCheck(e)) {\n        return;\n      }\n\n      e = _getEvent(e, preventDefault);\n      onWheel && (wheeled = true);\n      var multiplier = (e.deltaMode === 1 ? lineHeight : e.deltaMode === 2 ? _win.innerHeight : 1) * wheelSpeed;\n      onDelta(e.deltaX * multiplier, e.deltaY * multiplier, 0);\n      onStop && !isNormalizer && onStopDelayedCall.restart(true);\n    },\n        _onMove = function _onMove(e) {\n      if (_ignoreCheck(e)) {\n        return;\n      }\n\n      var x = e.clientX,\n          y = e.clientY,\n          dx = x - self.x,\n          dy = y - self.y;\n      self.x = x;\n      self.y = y;\n      moved = true;\n      (dx || dy) && onTouchOrPointerDelta(dx, dy);\n    },\n        _onHover = function _onHover(e) {\n      self.event = e;\n      onHover(self);\n    },\n        _onHoverEnd = function _onHoverEnd(e) {\n      self.event = e;\n      onHoverEnd(self);\n    },\n        _onClick = function _onClick(e) {\n      return _ignoreCheck(e) || _getEvent(e, preventDefault) && onClick(self);\n    };\n\n    onStopDelayedCall = self._dc = gsap.delayedCall(onStopDelay || 0.25, onStopFunc).pause();\n    self.deltaX = self.deltaY = 0;\n    self._vx = _getVelocityProp(0, 50, true);\n    self._vy = _getVelocityProp(0, 50, true);\n    self.scrollX = scrollFuncX;\n    self.scrollY = scrollFuncY;\n    self.isDragging = self.isGesturing = self.isPressed = false;\n\n    self.enable = function (e) {\n      if (!self.isEnabled) {\n        _addListener(isViewport ? ownerDoc : target, \"scroll\", _onScroll);\n\n        type.indexOf(\"scroll\") >= 0 && _addListener(isViewport ? ownerDoc : target, \"scroll\", onScroll, preventDefault, capture);\n        type.indexOf(\"wheel\") >= 0 && _addListener(target, \"wheel\", _onWheel, preventDefault, capture);\n\n        if (type.indexOf(\"touch\") >= 0 && _isTouch || type.indexOf(\"pointer\") >= 0) {\n          _addListener(target, _eventTypes[0], _onPress, preventDefault, capture);\n\n          _addListener(ownerDoc, _eventTypes[2], _onRelease);\n\n          _addListener(ownerDoc, _eventTypes[3], _onRelease);\n\n          allowClicks && _addListener(target, \"click\", clickCapture, false, true);\n          onClick && _addListener(target, \"click\", _onClick);\n          onGestureStart && _addListener(ownerDoc, \"gesturestart\", _onGestureStart);\n          onGestureEnd && _addListener(ownerDoc, \"gestureend\", _onGestureEnd);\n          onHover && _addListener(target, _pointerType + \"enter\", _onHover);\n          onHoverEnd && _addListener(target, _pointerType + \"leave\", _onHoverEnd);\n          onMove && _addListener(target, _pointerType + \"move\", _onMove);\n        }\n\n        self.isEnabled = true;\n        e && e.type && _onPress(e);\n        onEnable && onEnable(self);\n      }\n\n      return self;\n    };\n\n    self.disable = function () {\n      if (self.isEnabled) {\n        // only remove the _onScroll listener if there aren't any others that rely on the functionality.\n        _observers.filter(function (o) {\n          return o !== self && _isViewport(o.target);\n        }).length || _removeListener(isViewport ? ownerDoc : target, \"scroll\", _onScroll);\n\n        if (self.isPressed) {\n          self._vx.reset();\n\n          self._vy.reset();\n\n          _removeListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, true);\n        }\n\n        _removeListener(isViewport ? ownerDoc : target, \"scroll\", onScroll, capture);\n\n        _removeListener(target, \"wheel\", _onWheel, capture);\n\n        _removeListener(target, _eventTypes[0], _onPress, capture);\n\n        _removeListener(ownerDoc, _eventTypes[2], _onRelease);\n\n        _removeListener(ownerDoc, _eventTypes[3], _onRelease);\n\n        _removeListener(target, \"click\", clickCapture, true);\n\n        _removeListener(target, \"click\", _onClick);\n\n        _removeListener(ownerDoc, \"gesturestart\", _onGestureStart);\n\n        _removeListener(ownerDoc, \"gestureend\", _onGestureEnd);\n\n        _removeListener(target, _pointerType + \"enter\", _onHover);\n\n        _removeListener(target, _pointerType + \"leave\", _onHoverEnd);\n\n        _removeListener(target, _pointerType + \"move\", _onMove);\n\n        self.isEnabled = self.isPressed = self.isDragging = false;\n        onDisable && onDisable(self);\n      }\n    };\n\n    self.kill = function () {\n      self.disable();\n\n      var i = _observers.indexOf(self);\n\n      i >= 0 && _observers.splice(i, 1);\n      _normalizer === self && (_normalizer = 0);\n    };\n\n    _observers.push(self);\n\n    isNormalizer && _isViewport(target) && (_normalizer = self);\n    self.enable(event);\n  };\n\n  _createClass(Observer, [{\n    key: \"velocityX\",\n    get: function get() {\n      return this._vx.getVelocity();\n    }\n  }, {\n    key: \"velocityY\",\n    get: function get() {\n      return this._vy.getVelocity();\n    }\n  }]);\n\n  return Observer;\n}();\nObserver.version = \"3.10.4\";\n\nObserver.create = function (vars) {\n  return new Observer(vars);\n};\n\nObserver.register = _initCore;\n\nObserver.getAll = function () {\n  return _observers.slice();\n};\n\nObserver.getById = function (id) {\n  return _observers.filter(function (o) {\n    return o.vars.id === id;\n  })[0];\n};\n\n_getGSAP() && gsap.registerPlugin(Observer);\nexport { Observer as default, _isViewport, _scrollers, _getScrollFunc, _getProxyProp, _proxies, _getVelocityProp, _vertical, _horizontal, _getTarget };"],"mappings":"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"},"metadata":{},"sourceType":"module"}